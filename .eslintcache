[{"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/index.tsx":"1","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/ColorModeSwitcher.tsx":"2","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/serviceWorker.ts":"3","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/reportWebVitals.ts":"4","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Sidebar.tsx":"5","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/App.tsx":"6","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/CardHStack.tsx":"7","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/TypeBadge.tsx":"8","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/FlowCard.tsx":"9","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Card.tsx":"10","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/state.ts":"11","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Editor.tsx":"12","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/PopoverExplanation.tsx":"13","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/EditableText.tsx":"14","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/theme.ts":"15","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/utils.js":"16","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/index.js":"17","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/autocomplete.js":"18","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/triggers.js":"19","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/data.js":"20","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/styles.js":"21","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/addsuggestion.js":"22","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/suggestions.js":"23","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/DocsCard/components.tsx":"24","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/DocsCard/DocsCard.tsx":"25"},{"size":953,"mtime":1607783634378,"results":"26","hashOfConfig":"27"},{"size":743,"mtime":1606395811243,"results":"28","hashOfConfig":"27"},{"size":5258,"mtime":1606395314403,"results":"29","hashOfConfig":"27"},{"size":416,"mtime":1606395314402,"results":"30","hashOfConfig":"27"},{"size":13504,"mtime":1608483947866,"results":"31","hashOfConfig":"27"},{"size":4170,"mtime":1608553093512,"results":"32","hashOfConfig":"27"},{"size":4291,"mtime":1608554703723,"results":"33","hashOfConfig":"27"},{"size":1370,"mtime":1608321098960,"results":"34","hashOfConfig":"27"},{"size":13658,"mtime":1608554532945,"results":"35","hashOfConfig":"27"},{"size":605,"mtime":1606852903166,"results":"36","hashOfConfig":"27"},{"size":10901,"mtime":1608513172431,"results":"37","hashOfConfig":"27"},{"size":870,"mtime":1608005300285,"results":"38","hashOfConfig":"27"},{"size":1295,"mtime":1608457387478,"results":"39","hashOfConfig":"27"},{"size":393,"mtime":1607635865658,"results":"40","hashOfConfig":"27"},{"size":2081,"mtime":1608324466728,"results":"41","hashOfConfig":"27"},{"size":408,"mtime":1608130752557,"results":"42","hashOfConfig":"27"},{"size":2398,"mtime":1608157691253,"results":"43","hashOfConfig":"27"},{"size":8928,"mtime":1608177181752,"results":"44","hashOfConfig":"27"},{"size":441,"mtime":1608130752556,"results":"45","hashOfConfig":"27"},{"size":182,"mtime":1608130752554,"results":"46","hashOfConfig":"27"},{"size":742,"mtime":1608130752556,"results":"47","hashOfConfig":"27"},{"size":1086,"mtime":1608130752553,"results":"48","hashOfConfig":"27"},{"size":859,"mtime":1608142377987,"results":"49","hashOfConfig":"27"},{"size":6172,"mtime":1608473933353,"results":"50","hashOfConfig":"27"},{"size":22979,"mtime":1608554583860,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"5rdob7",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/index.tsx",["121"],"import * as React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ColorModeScript, extendTheme, ChakraProvider } from '@chakra-ui/react'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\nimport * as serviceWorker from './serviceWorker'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n",["122","123"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/ColorModeSwitcher.tsx",[],["124","125"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/serviceWorker.ts",[],["126","127"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/reportWebVitals.ts",[],["128","129"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Sidebar.tsx",["130","131","132"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/App.tsx",["133","134","135","136","137","138","139","140"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/CardHStack.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/TypeBadge.tsx",["141","142"],"import * as React from 'react'\nimport { Code, CodeProps, TextProps, useTheme } from '@chakra-ui/react'\nimport { Itype } from './interfaces'\n\nconst TypeBadge = ({\n  typeAsString,\n  // fontSize,\n  as,\n  children,\n  rounded,\n}: {\n  typeAsString: Itype['type']\n  // fontSize?: CodeProps['fontSize']\n  as?: CodeProps['as']\n  rounded?: CodeProps['rounded']\n  children?: any\n}) => {\n  // const {\n  //   colors: {\n  //     unison: { orange, yellow },\n  //   },\n  // } = useTheme()\n\n  return (\n    <Code\n      as={as}\n      // fontSize={fontSize}\n      // paddingX={1}\n      // paddingY={0.5}\n      sx={\n        {\n          string: { color: 'unison.darkOrange', backgroundColor: 'yellow.100' },\n          number: {\n            color: 'unison.darkGreen',\n            backgroundColor: 'green.100',\n          },\n          boolean: { color: 'unison.pink', backgroundColor: 'pink.100' },\n          function: { color: 'unison.purple', backgroundColor: 'purple.100' },\n          object: { color: 'black', backgroundColor: 'gray.100' },\n          array: { color: 'black', backgroundColor: 'gray.100' },\n          undefined: { color: 'black', backgroundColor: 'gray.100' },\n          null: { color: 'black', backgroundColor: 'gray.100' },\n        }[typeAsString]\n      }\n      rounded={rounded ?? 'base'}\n    >\n      {children ?? typeAsString}\n    </Code>\n  )\n}\n\nexport default TypeBadge\n",["143","144"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/FlowCard.tsx",["145","146","147","148","149","150","151","152","153","154"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Card.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/state.ts",["155","156"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Editor.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/PopoverExplanation.tsx",["157"],"import { QuestionIcon, QuestionOutlineIcon } from '@chakra-ui/icons'\nimport {\n  Popover,\n  PopoverTrigger,\n  IconButton,\n  PopoverContent,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverBody,\n  PopoverHeader,\n  PopoverBodyProps,\n  Tooltip,\n} from '@chakra-ui/react'\nimport React from 'react'\n\nconst PopoverExplanation = (props: {\n  children: PopoverBodyProps['children']\n  label: string\n  title: string\n}) => {\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <IconButton\n          aria-label={props.label}\n          icon={\n            <Tooltip label={props.label} aria-label={props.label} hasArrow>\n              {/* <QuestionOutlineIcon /> */}\n              <QuestionIcon />\n            </Tooltip>\n          }\n          size='lg'\n          // colorScheme='purple'\n          color='unison.purple'\n          variant='ghost'\n          sx={{\n            '&:hover': {\n              color: 'unison.aqua',\n            },\n          }}\n        />\n      </PopoverTrigger>\n\n      {/* <PopoverContent borderColor='unison.purple'> */}\n      <PopoverContent>\n        <PopoverArrow />\n        <PopoverCloseButton />\n        <PopoverHeader>{props.title}</PopoverHeader>\n        <PopoverBody>{props.children}</PopoverBody>\n      </PopoverContent>\n    </Popover>\n  )\n}\n\nexport default PopoverExplanation\n","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/EditableText.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/theme.ts",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/utils.js",[],["158","159"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/index.js",["160","161","162","163","164"],"import { Entity, Modifier, Editor, EditorState } from 'draft-js'\nimport * as React from 'react'\nimport { AutocompleteEditor } from './autocomplete'\nimport SuggestionList from './suggestions'\nimport styles from './styles'\nimport { normalizeIndex, filterArray } from './utils'\nimport * as triggers from './triggers'\nimport * as data from './data'\nimport addSuggestion from './addsuggestion'\n\nvar filteredArrayTemp\n\nexport default class AutocompleteInput extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      autocompleteState: null,\n    }\n\n    this.onChange = editorState =>\n      this.setState({\n        editorState,\n      })\n\n    this.onAutocompleteChange = autocompleteState =>\n      this.setState({\n        autocompleteState,\n      })\n\n    this.onInsert = insertState => {\n      if (!filteredArrayTemp) {\n        return null\n      }\n      const index = normalizeIndex(\n        insertState.selectedIndex,\n        filteredArrayTemp.length,\n      )\n      insertState.text = insertState.trigger + filteredArrayTemp[index]\n      return addSuggestion(insertState)\n    }\n  }\n\n  renderAutocomplete() {\n    //left, top, array, selectedIndex, type, text\n    const { autocompleteState, onSuggestionClick } = this.state\n    if (!autocompleteState) {\n      return null\n    }\n    filteredArrayTemp = this.getFilteredArray(\n      autocompleteState.type,\n      autocompleteState.text,\n    )\n    autocompleteState.array = filteredArrayTemp\n    // autocompleteState.onSuggestionClick = this.onSuggestionItemClick\n    return <SuggestionList suggestionsState={autocompleteState} />\n  }\n\n  getFilteredArray(type, text) {\n    const dataArray = type == triggers.PERSON ? data.persons : data.tags\n    const filteredArray = filterArray(\n      dataArray,\n      text.replace(triggers.regExByType(type), ''),\n    )\n    return filteredArray\n  }\n\n  render() {\n    return (\n      <div style={styles.root}>\n        {' '}\n        {this.renderAutocomplete()}{' '}\n        <div style={styles.editor}>\n          <AutocompleteEditor\n            editorState={this.state.editorState}\n            onChange={this.onChange}\n            onAutocompleteChange={this.onAutocompleteChange}\n            onInsert={this.onInsert}\n          />{' '}\n        </div>{' '}\n      </div>\n    )\n  }\n}\n\n// render( < AutocompleteInput / > ,\n//   document.getElementById('app')\n// );\n",["165","166"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/autocomplete.js",["167","168","169","170","171","172","173","174","175","176","177","178"],"import { render } from 'react-dom'\nimport React from 'react'\nimport { Editor, EditorState } from 'draft-js'\nimport styles from './styles'\nimport * as triggers from './triggers'\n\nexport class AutocompleteEditor extends Editor {\n  constructor(props) {\n    super(props)\n    this.autocompleteState = null\n\n    this.onChange = editorState => {\n      const { onChange, onAutocompleteChange } = this.props\n      onChange(editorState)\n      if (onAutocompleteChange) {\n        window.requestAnimationFrame(() => {\n          onAutocompleteChange(this.getAutocompleteState())\n        })\n      }\n    }\n\n    this.onArrow = (e, originalHandler, nudgeAmount) => {\n      const { onAutocompleteChange } = this.props\n      let autocompleteState = this.getAutocompleteState(false)\n      if (!autocompleteState) {\n        if (originalHandler) {\n          originalHandler(e)\n        }\n        return\n      }\n\n      e.preventDefault()\n      autocompleteState.selectedIndex += nudgeAmount\n      this.autocompleteState = autocompleteState\n      if (onAutocompleteChange) {\n        onAutocompleteChange(autocompleteState)\n      }\n    }\n\n    this.onUpArrow = e => {\n      this.onArrow(e, this.props.onUpArrow, -1)\n      const contentState = this.props.editorState.getCurrentContent()\n    }\n\n    this.onDownArrow = e => {\n      this.onArrow(e, this.props.onDownArrow, 1)\n    }\n\n    this.onEscape = e => {\n      const { onEscape, onAutocompleteChange } = this.props\n\n      if (!this.getAutocompleteState(false)) {\n        if (onEscape) {\n          onEscape(e)\n        }\n        return\n      }\n\n      e.preventDefault()\n      this.autocompleteState = null\n\n      if (onAutocompleteChange) {\n        onAutocompleteChange(null)\n      }\n    }\n\n    this.onTab = e => {\n      this.commitSelection(e)\n    }\n\n    this.handleReturn = e => {\n      return this.commitSelection(e)\n    }\n  }\n\n  commitSelection(e) {\n    const { onAutocompleteChange } = this.props\n    let autocompleteState = this.getAutocompleteState(false)\n    if (!autocompleteState) {\n      return false\n    }\n    e.preventDefault()\n    this.onMentionSelect()\n    this.autocompleteState = null\n\n    if (onAutocompleteChange) {\n      onAutocompleteChange(null)\n    }\n    return true\n  }\n\n  onMentionSelect() {\n    let autocompleteState = this.getAutocompleteState(false)\n    const { editorState } = this.props\n    const insertState = this.getInsertState(\n      autocompleteState.selectedIndex,\n      autocompleteState.trigger,\n    )\n    const { onInsert } = this.props\n    const newEditorState = onInsert(insertState)\n    const { onChange } = this.props\n    onChange(newEditorState)\n  }\n\n  getInsertState(selectedIndex, trigger) {\n    const { editorState } = this.props\n    const currentSelectionState = editorState.getSelection()\n    const end = currentSelectionState.getAnchorOffset()\n    const anchorKey = currentSelectionState.getAnchorKey()\n    const currentContent = editorState.getCurrentContent()\n    const currentBlock = currentContent.getBlockForKey(anchorKey)\n    const blockText = currentBlock.getText()\n    const start = blockText.substring(0, end).lastIndexOf(trigger)\n    return {\n      editorState,\n      start,\n      end,\n      trigger,\n      selectedIndex,\n    }\n  }\n\n  hasEntityAtSelection() {\n    const { editorState } = this.props\n\n    const selection = editorState.getSelection()\n    if (!selection.getHasFocus()) {\n      return false\n    }\n\n    const contentState = editorState.getCurrentContent()\n    const block = contentState.getBlockForKey(selection.getStartKey())\n    return !!block.getEntityAt(selection.getStartOffset() - 1)\n  }\n\n  getAutocompleteRange(trigger) {\n    const selection = window.getSelection()\n    if (selection.rangeCount === 0) {\n      return null\n    }\n\n    if (this.hasEntityAtSelection()) {\n      return null\n    }\n\n    const range = selection.getRangeAt(0)\n    let text = range.startContainer.textContent\n    text = text.substring(0, range.startOffset)\n    const index = text.lastIndexOf(trigger)\n    if (index === -1) {\n      return null\n    }\n    text = text.substring(index)\n    return {\n      text,\n      start: index,\n      end: range.startOffset,\n    }\n  }\n\n  getAutocompleteState(invalidate = true) {\n    if (!invalidate) {\n      return this.autocompleteState\n    }\n\n    const tagRange = this.getAutocompleteRange(triggers.TAG_TRIGGER)\n    const personRange = this.getAutocompleteRange(triggers.PERSON_TRIGGER)\n    if (!tagRange && !personRange) {\n      this.autocompleteState = null\n      return null\n    }\n    var type = null\n    var trigger = null\n    var range = null\n    if (!tagRange) {\n      range = personRange\n      type = triggers.PERSON\n      trigger = triggers.PERSON_TRIGGER\n    }\n\n    if (!personRange) {\n      range = tagRange\n      type = triggers.TAG\n      trigger = triggers.TAG_TRIGGER\n    }\n\n    if (!range) {\n      range = tagRange.start > personRange.start ? tagRange : personRange\n      type = tagRange.start > personRange.start ? triggers.TAG : triggers.PERSON\n      trigger =\n        tagRange.start > personRange.start\n          ? triggers.TAG_TRIGGER\n          : triggers.PERSON_TRIGGER\n    }\n\n    const tempRange = window.getSelection().getRangeAt(0).cloneRange()\n    tempRange.setStart(tempRange.startContainer, range.start)\n\n    const rangeRect = tempRange.getBoundingClientRect()\n    let [left, top] = [rangeRect.left, rangeRect.bottom]\n\n    this.autocompleteState = {\n      trigger,\n      type,\n      left,\n      top,\n      text: range.text,\n      selectedIndex: 0,\n    }\n    console.log(this.autocompleteState)\n    return this.autocompleteState\n  }\n\n  ///\n\n  getAutocompleteState(invalidate = true) {\n    if (!invalidate) {\n      return this.autocompleteState\n    }\n    var type = null\n    var trigger = null\n    //Get range for latest hash tag trigger symbol.\n    const tagRange = this.getAutocompleteRange(triggers.TAG_TRIGGER)\n    //Get range for latest mention tag trigger symbol.\n    const personRange = this.getAutocompleteRange(triggers.PERSON_TRIGGER)\n    //Find what trigger is latest.\n    if (!tagRange && !personRange) {\n      this.autocompleteState = null\n      return null\n    }\n    var range = null\n    if (!tagRange) {\n      range = personRange\n      type = triggers.PERSON\n      trigger = triggers.PERSON_TRIGGER\n    }\n    if (!personRange) {\n      range = tagRange\n      type = triggers.TAG\n      trigger = triggers.TAG_TRIGGER\n    }\n    if (!range) {\n      range = tagRange.start > personRange.start ? tagRange : personRange\n      type = tagRange.start > personRange.start ? triggers.TAG : triggers.PERSON\n      trigger =\n        tagRange.start > personRange.start\n          ? triggers.TAG_TRIGGER\n          : triggers.PERSON_TRIGGER\n    }\n    //Get left and top coordinates of range.\n    //This point will be used to draw suggestion list.\n    const tempRange = window.getSelection().getRangeAt(0).cloneRange()\n    tempRange.setStart(tempRange.startContainer, range.start)\n    const rangeRect = tempRange.getBoundingClientRect()\n    let [left, top] = [rangeRect.left, rangeRect.bottom]\n    //Create autocompleteState.\n    this.autocompleteState = {\n      trigger, //Trigger symbol. “@” or “#”\n      type, //Type of trigger. Can be TAG or PERSON.\n      left, //The left point of range.\n      top, //The top point of range.\n      text: range.text, //Current text in selected range.\n      selectedIndex: 0, //Selected index in list. 0 for new list.\n    }\n    return this.autocompleteState\n  }\n  //Get range of possible mention or hashtag.\n  getAutocompleteRange(trigger) {\n    const selection = window.getSelection()\n    if (selection.rangeCount === 0) {\n      return null\n    }\n    if (this.hasEntityAtSelection()) {\n      return null\n    }\n    const range = selection.getRangeAt(0)\n    let text = range.startContainer.textContent\n    text = text.substring(0, range.startOffset)\n    const index = text.lastIndexOf(trigger)\n    if (index === -1) {\n      return null\n    }\n    text = text.substring(index)\n    return {\n      text,\n      start: index,\n      end: range.startOffset,\n    }\n  }\n\n  hasEntityAtSelection() {\n    const { editorState } = this.props\n    const selection = editorState.getSelection()\n    //If there is no focus, return.\n    if (!selection.getHasFocus()) {\n      return false\n    }\n    const contentState = editorState.getCurrentContent()\n    const block = contentState.getBlockForKey(selection.getStartKey())\n    return !!block.getEntityAt(selection.getStartOffset() - 1)\n  }\n\n  ///\n  render() {\n    const {\n      onChange,\n      editorState,\n      onEscape,\n      onUpArrow,\n      onDownArrow,\n      onAutocompleteChange,\n    } = this.props\n\n    return (\n      <Editor\n        customStyleMap={styles}\n        editorState={editorState}\n        handleReturn={this.handleReturn}\n        onChange={this.onChange}\n        onEscape={this.onEscape}\n        onUpArrow={this.onUpArrow}\n        onDownArrow={this.onDownArrow}\n        onTab={this.onTab}\n      />\n    )\n  }\n}\n",["179","180"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/triggers.js",["181","182"],"export const TAG = 1;\nexport const PERSON = 2;\nexport const RELATIONS = 3;\nexport const TAG_TRIGGER = '#';\nexport const PERSON_TRIGGER = '@';\nexport const RELATIONS_TRIGGER = '<';\n\n\nexport const TAG_REG_EX = /^#/;\nexport const PERSON_REG_EX = /^@/;\n\n\nexport const triggerByType = (type) => {\n  return type == TAG ? TAG_TRIGGER : PERSON_TRIGGER;\n};\n\nexport const regExByType = (type) => {\n  return type == TAG ? TAG_REG_EX : PERSON_REG_EX;\n};",["183","184"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/data.js",[],["185","186"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/styles.js",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/addsuggestion.js",["187"],"import { Entity, Modifier, Editor, EditorState } from 'draft-js';\n\nconst addSuggestion = ({editorState, start, end, trigger, text}) => {\n  const entityKey = Entity.create('MENTION', 'IMMUTABLE', \"http://vk.com\");\n  const currentSelectionState = editorState.getSelection();\n  const mentionTextSelection = currentSelectionState.merge({\n    anchorOffset: start,\n    focusOffset: end\n  });\n\n  let insertingContent = Modifier.replaceText(\n    editorState.getCurrentContent(),\n    mentionTextSelection,\n    text, ['link', 'BOLD'],\n    entityKey\n  );\n\n  const blockKey = mentionTextSelection.getAnchorKey();\n  const blockSize = editorState.getCurrentContent().getBlockForKey(blockKey).getLength();\n  if (blockSize === end) {\n    insertingContent = Modifier.insertText(\n      insertingContent,\n      insertingContent.getSelectionAfter(),\n      ' '\n    );\n  }\n\n  const newEditorState = EditorState.push(\n    editorState,\n    insertingContent,\n    'insert-mention'\n  );\n\n  return EditorState.forceSelection(newEditorState, insertingContent.getSelectionAfter());\n};\n\n\nexport default addSuggestion;","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/suggestions.js",["188"],"import styles from './styles'\nimport { render } from 'react-dom'\nimport React from 'react'\nimport { normalizeIndex } from './utils'\n\nconst SuggestionList = props => {\n  const { suggestionsState } = props\n  const { left, top, array, selectedIndex } = suggestionsState\n\n  const style = Object.assign({}, styles.suggestions, {\n    position: 'absolute',\n    left,\n    top,\n  })\n  if (!array) {\n    return null\n  }\n  const normalizedIndex = normalizeIndex(selectedIndex, array.length)\n  return (\n    <ul style={style}>\n      {' '}\n      {array.map((person, index) => {\n        const style =\n          index === normalizedIndex ? styles.selectedPerson : styles.person\n        return (\n          <li key={person} style={style}>\n            {' '}\n            {person}{' '}\n          </li>\n        )\n      }, this)}{' '}\n    </ul>\n  )\n}\n\nexport default SuggestionList\n","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/DocsCard/components.tsx",["189","190","191"],"import * as React from 'react'\nimport { Fade, Button, Box, Switch, IconButton, HStack } from '@chakra-ui/react'\nimport {\n  ArrowUpDownIcon,\n  CheckIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  CloseIcon,\n  DeleteIcon,\n} from '@chakra-ui/icons'\nimport PopoverExplanation from '../PopoverExplanation'\nimport TypeBadge from '../TypeBadge'\nimport { Itype } from '../interfaces'\nimport { FunctionItem } from '../Sidebar'\nimport { GoVersions } from 'react-icons/go'\nimport { Action, StateContext } from '../../state'\nconst { useContext } = React\n\nexport const SaveButton = ({\n  onClick,\n  fadeIn,\n  disabled,\n}: {\n  onClick: () => void\n  fadeIn: boolean\n  disabled: boolean\n}) =>\n  fadeIn ? (\n    <Fade in={true}>\n      {/* Save button */}\n      <Button\n        color={disabled ? 'gray.300' : 'unison.green'}\n        sx={{ '&:hover': { backgroundColor: 'green.50' } }}\n        variant='ghost'\n        leftIcon={<CheckIcon />}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        Save\n      </Button>\n    </Fade>\n  ) : null\n\nexport const ClearButton = ({\n  onClick,\n  fadeIn,\n}: {\n  onClick: () => void\n  fadeIn: boolean\n}) =>\n  fadeIn ? (\n    <Fade in={true}>\n      <Button\n        color='unison.darkPink'\n        sx={{ '&:hover': { backgroundColor: 'red.50' } }}\n        variant='ghost'\n        leftIcon={<DeleteIcon />}\n        onClick={onClick}\n      >\n        Clear\n      </Button>\n    </Fade>\n  ) : null\n\nexport const DocsExplanation = () => (\n  <PopoverExplanation label='Docs card explanation' title='Docs card'>\n    Docs is an editable view of the documentation for a function. The signature\n    input will autocomplete types (string/boolean/number so far) and arrows but\n    will not prevent invalid states, which will disable the \"Save\" button. The\n    description can reference other functions with \"@\" (triggers autocomplete)\n    and navigate to them by clicking on the link. Navigation can be \"browser\n    history style\" or \"panes style\".\n  </PopoverExplanation>\n)\n\nexport const TypeSuggestionList = ({\n  typeSuggestions,\n  selectedIndex,\n  left,\n  top,\n}: {\n  typeSuggestions: {\n    title: Itype['type']\n  }[]\n  selectedIndex: number\n  left: number\n  top: number\n}) => (\n  <Box\n    as='ul'\n    position='fixed'\n    left={left}\n    top={top}\n    listStyleType='none'\n    padding={1}\n    boxShadow='lg'\n    backgroundColor='white'\n    rounded='sm'\n    zIndex={1000}\n  >\n    {typeSuggestions.map((s, i) => (\n      <Box\n        as='li'\n        key={s.title}\n        display='block'\n        textAlign='center'\n        paddingX={1}\n        paddingY={1}\n        backgroundColor={\n          i === selectedIndex\n            ? 'unison.aqua'\n            : s.title === 'string'\n            ? 'yellow.100'\n            : s.title === 'number'\n            ? 'green.100'\n            : s.title === 'boolean'\n            ? 'pink.100'\n            : 'white'\n        }\n      >\n        <TypeBadge rounded={'none'} typeAsString={s.title}>\n          {s.title}\n        </TypeBadge>\n      </Box>\n    ))}\n  </Box>\n)\n\nexport const FunctionSuggestionList = ({\n  functionSuggestions,\n  selectedIndex,\n  left,\n  top,\n}: {\n  functionSuggestions: {\n    name: string\n  }[]\n  selectedIndex: number\n  left: number\n  top: number\n}) => (\n  <Box\n    as='ul'\n    position='fixed'\n    left={left}\n    top={top}\n    listStyleType='none'\n    padding={1}\n    boxShadow='lg'\n    backgroundColor='white'\n    rounded='sm'\n    zIndex={1000}\n  >\n    {functionSuggestions.map((s, i) => (\n      <Box\n        as='li'\n        key={s.name}\n        display='block'\n        textAlign='center'\n        paddingX={1}\n        paddingY={1}\n        backgroundColor={i === selectedIndex ? 'unison.aqua' : 'white'}\n        rounded={'base'}\n      >\n        {s.name}\n      </Box>\n    ))}\n  </Box>\n)\n\nexport const DocsNavigationTypeSelector = ({\n  navigationType,\n  dispatch,\n}: {\n  navigationType: 'history' | 'panes'\n  dispatch: React.Dispatch<Action>\n}) => {\n  return (\n    <IconButton\n      onClick={() => {\n        dispatch({\n          type: 'changeNavigationType',\n          navigationType: navigationType === 'history' ? 'panes' : 'history',\n        })\n      }}\n      variant='ghost'\n      sx={{\n        color: 'unison.purple',\n        '&:hover': {\n          color: 'unison.aqua',\n        },\n      }}\n      aria-label='Change navigation type'\n      size='md'\n      icon={\n        navigationType === 'panes' ? (\n          <ArrowUpDownIcon\n            sx={{ transform: 'rotate(90deg)' }}\n          ></ArrowUpDownIcon>\n        ) : (\n          <GoVersions></GoVersions>\n        )\n      }\n    ></IconButton>\n\n    /* <Switch\n        size='sm'\n        isChecked={navigationType === 'panes'}\n        marginX={1}\n        onChange={() => {\n          dispatch({\n            type: 'changeNavigationType',\n            navigationType: navigationType === 'history' ? 'panes' : 'history',\n          })\n        }}\n      ></Switch> */\n  )\n}\n\nconst getButtonStyles = (isDisabled: boolean) => ({\n  variant: 'ghost',\n  sx: isDisabled\n    ? {\n        color: 'grey.300',\n      }\n    : {\n        color: 'unison.purple',\n        '&:hover': {\n          color: 'unison.aqua',\n        },\n      },\n})\n\nexport const DocsNavigationArrows = () => {\n  const { state, dispatch } = useContext(StateContext)\n  const size = '6'\n  const backDisabled = state.docCardsSelectedIndex === 0\n  const forwardDisabled =\n    state.docCardsSelectedIndex === state.docCards.length - 1\n  return (\n    <HStack>\n      <IconButton\n        onClick={() => {\n          dispatch({\n            type: 'docsNavigate',\n            to: 'back',\n          })\n        }}\n        aria-label='Navigate back'\n        {...getButtonStyles(backDisabled)}\n        disabled={backDisabled}\n        icon={<ChevronLeftIcon w={size} h={size}></ChevronLeftIcon>}\n      ></IconButton>\n\n      <IconButton\n        margin={0}\n        onClick={() => {\n          dispatch({\n            type: 'docsNavigate',\n            to: 'forwards',\n          })\n        }}\n        disabled={forwardDisabled}\n        aria-label='Navigate forwads'\n        {...getButtonStyles(forwardDisabled)}\n        icon={<ChevronRightIcon w={size} h={size}></ChevronRightIcon>}\n      ></IconButton>\n    </HStack>\n  )\n}\n","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/DocsCard/DocsCard.tsx",["192","193","194","195","196","197","198","199","200"],{"ruleId":"201","severity":1,"message":"202","line":3,"column":27,"nodeType":"203","messageId":"204","endLine":3,"endColumn":38},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"205","replacedBy":"209"},{"ruleId":"207","replacedBy":"210"},{"ruleId":"205","replacedBy":"211"},{"ruleId":"207","replacedBy":"212"},{"ruleId":"205","replacedBy":"213"},{"ruleId":"207","replacedBy":"214"},{"ruleId":"201","severity":1,"message":"215","line":17,"column":3,"nodeType":"203","messageId":"204","endLine":17,"endColumn":20},{"ruleId":"201","severity":1,"message":"216","line":18,"column":3,"nodeType":"203","messageId":"204","endLine":18,"endColumn":18},{"ruleId":"201","severity":1,"message":"217","line":422,"column":31,"nodeType":"203","messageId":"204","endLine":422,"endColumn":39},{"ruleId":"201","severity":1,"message":"218","line":4,"column":3,"nodeType":"203","messageId":"204","endLine":4,"endColumn":6},{"ruleId":"201","severity":1,"message":"219","line":5,"column":3,"nodeType":"203","messageId":"204","endLine":5,"endColumn":9},{"ruleId":"201","severity":1,"message":"220","line":6,"column":3,"nodeType":"203","messageId":"204","endLine":6,"endColumn":9},{"ruleId":"201","severity":1,"message":"221","line":7,"column":3,"nodeType":"203","messageId":"204","endLine":7,"endColumn":12},{"ruleId":"201","severity":1,"message":"222","line":8,"column":3,"nodeType":"203","messageId":"204","endLine":8,"endColumn":11},{"ruleId":"201","severity":1,"message":"223","line":14,"column":8,"nodeType":"203","messageId":"204","endLine":14,"endColumn":16},{"ruleId":"201","severity":1,"message":"224","line":16,"column":8,"nodeType":"203","messageId":"204","endLine":16,"endColumn":16},{"ruleId":"201","severity":1,"message":"225","line":20,"column":10,"nodeType":"203","messageId":"204","endLine":20,"endColumn":17},{"ruleId":"201","severity":1,"message":"226","line":2,"column":27,"nodeType":"203","messageId":"204","endLine":2,"endColumn":36},{"ruleId":"201","severity":1,"message":"222","line":2,"column":38,"nodeType":"203","messageId":"204","endLine":2,"endColumn":46},{"ruleId":"205","replacedBy":"227"},{"ruleId":"207","replacedBy":"228"},{"ruleId":"201","severity":1,"message":"220","line":7,"column":3,"nodeType":"203","messageId":"204","endLine":7,"endColumn":9},{"ruleId":"201","severity":1,"message":"229","line":18,"column":3,"nodeType":"203","messageId":"204","endLine":18,"endColumn":21},{"ruleId":"201","severity":1,"message":"230","line":19,"column":3,"nodeType":"203","messageId":"204","endLine":19,"endColumn":25},{"ruleId":"201","severity":1,"message":"231","line":20,"column":3,"nodeType":"203","messageId":"204","endLine":20,"endColumn":25},{"ruleId":"201","severity":1,"message":"232","line":22,"column":3,"nodeType":"203","messageId":"204","endLine":22,"endColumn":7},{"ruleId":"201","severity":1,"message":"233","line":33,"column":3,"nodeType":"203","messageId":"204","endLine":33,"endColumn":17},{"ruleId":"201","severity":1,"message":"234","line":197,"column":34,"nodeType":"203","messageId":"204","endLine":197,"endColumn":36},{"ruleId":"235","severity":1,"message":"236","line":291,"column":25,"nodeType":"237","endLine":295,"endColumn":27},{"ruleId":"235","severity":1,"message":"236","line":306,"column":17,"nodeType":"237","endLine":311,"endColumn":19},{"ruleId":"235","severity":1,"message":"236","line":314,"column":15,"nodeType":"237","endLine":319,"endColumn":17},{"ruleId":"201","severity":1,"message":"238","line":1,"column":8,"nodeType":"203","messageId":"204","endLine":1,"endColumn":15},{"ruleId":"201","severity":1,"message":"224","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":16},{"ruleId":"201","severity":1,"message":"239","line":1,"column":24,"nodeType":"203","messageId":"204","endLine":1,"endColumn":43},{"ruleId":"205","replacedBy":"240"},{"ruleId":"207","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":16},{"ruleId":"242","severity":1,"message":"244","line":1,"column":18,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"245","line":1,"column":28,"nodeType":"203","messageId":"204","endLine":1,"endColumn":34},{"ruleId":"242","severity":1,"message":"246","line":46,"column":32,"nodeType":"203","messageId":"204","endLine":46,"endColumn":49},{"ruleId":"247","severity":1,"message":"248","line":60,"column":28,"nodeType":"249","messageId":"250","endLine":60,"endColumn":30},{"ruleId":"205","replacedBy":"251"},{"ruleId":"207","replacedBy":"252"},{"ruleId":"242","severity":1,"message":"253","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":16},{"ruleId":"242","severity":1,"message":"254","line":3,"column":18,"nodeType":"203","messageId":"204","endLine":3,"endColumn":29},{"ruleId":"242","severity":1,"message":"255","line":42,"column":13,"nodeType":"203","messageId":"204","endLine":42,"endColumn":25},{"ruleId":"242","severity":1,"message":"256","line":94,"column":13,"nodeType":"203","messageId":"204","endLine":94,"endColumn":24},{"ruleId":"257","severity":1,"message":"258","line":216,"column":3,"nodeType":"259","messageId":"250","endLine":266,"endColumn":4},{"ruleId":"257","severity":1,"message":"260","line":268,"column":3,"nodeType":"259","messageId":"250","endLine":289,"endColumn":4},{"ruleId":"257","severity":1,"message":"261","line":291,"column":3,"nodeType":"259","messageId":"250","endLine":301,"endColumn":4},{"ruleId":"242","severity":1,"message":"262","line":306,"column":7,"nodeType":"203","messageId":"204","endLine":306,"endColumn":15},{"ruleId":"242","severity":1,"message":"263","line":308,"column":7,"nodeType":"203","messageId":"204","endLine":308,"endColumn":15},{"ruleId":"242","severity":1,"message":"264","line":309,"column":7,"nodeType":"203","messageId":"204","endLine":309,"endColumn":16},{"ruleId":"242","severity":1,"message":"265","line":310,"column":7,"nodeType":"203","messageId":"204","endLine":310,"endColumn":18},{"ruleId":"242","severity":1,"message":"266","line":311,"column":7,"nodeType":"203","messageId":"204","endLine":311,"endColumn":27},{"ruleId":"205","replacedBy":"267"},{"ruleId":"207","replacedBy":"268"},{"ruleId":"247","severity":1,"message":"248","line":14,"column":15,"nodeType":"249","messageId":"250","endLine":14,"endColumn":17},{"ruleId":"247","severity":1,"message":"248","line":18,"column":15,"nodeType":"249","messageId":"250","endLine":18,"endColumn":17},{"ruleId":"205","replacedBy":"269"},{"ruleId":"207","replacedBy":"270"},{"ruleId":"205","replacedBy":"271"},{"ruleId":"207","replacedBy":"272"},{"ruleId":"242","severity":1,"message":"245","line":1,"column":28,"nodeType":"203","messageId":"204","endLine":1,"endColumn":34},{"ruleId":"242","severity":1,"message":"253","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":16},{"ruleId":"201","severity":1,"message":"273","line":2,"column":29,"nodeType":"203","messageId":"204","endLine":2,"endColumn":35},{"ruleId":"201","severity":1,"message":"274","line":8,"column":3,"nodeType":"203","messageId":"204","endLine":8,"endColumn":12},{"ruleId":"201","severity":1,"message":"275","line":14,"column":10,"nodeType":"203","messageId":"204","endLine":14,"endColumn":22},{"ruleId":"201","severity":1,"message":"276","line":16,"column":3,"nodeType":"203","messageId":"204","endLine":16,"endColumn":7},{"ruleId":"201","severity":1,"message":"277","line":19,"column":21,"nodeType":"203","messageId":"204","endLine":19,"endColumn":36},{"ruleId":"201","severity":1,"message":"243","line":33,"column":3,"nodeType":"203","messageId":"204","endLine":33,"endColumn":9},{"ruleId":"201","severity":1,"message":"278","line":38,"column":8,"nodeType":"203","messageId":"204","endLine":38,"endColumn":25},{"ruleId":"201","severity":1,"message":"279","line":49,"column":9,"nodeType":"203","messageId":"204","endLine":49,"endColumn":27},{"ruleId":"280","severity":1,"message":"281","line":81,"column":12,"nodeType":"282","messageId":"250","endLine":81,"endColumn":16},{"ruleId":"201","severity":1,"message":"283","line":338,"column":5,"nodeType":"203","messageId":"204","endLine":338,"endColumn":31},{"ruleId":"201","severity":1,"message":"284","line":340,"column":9,"nodeType":"203","messageId":"204","endLine":340,"endColumn":26},{"ruleId":"285","severity":1,"message":"286","line":593,"column":6,"nodeType":"287","endLine":593,"endColumn":28,"suggestions":"288"},"@typescript-eslint/no-unused-vars","'extendTheme' is defined but never used.","Identifier","unusedVar","no-native-reassign",["289"],"no-negated-in-lhs",["290"],["289"],["290"],["289"],["290"],["289"],["290"],"'InputRightElement' is defined but never used.","'InputRightAddon' is defined but never used.","'_' is assigned a value but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'Center' is defined but never used.","'ScaleFade' is defined but never used.","'useTheme' is defined but never used.","'FlowCard' is defined but never used.","'DocsCard' is defined but never used.","'AddIcon' is defined but never used.","'TextProps' is defined but never used.",["289"],["290"],"'NumberInputStepper' is defined but never used.","'NumberIncrementStepper' is defined but never used.","'NumberDecrementStepper' is defined but never used.","'Text' is defined but never used.","'PlusSquareIcon' is defined but never used.","'id' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component C_TypeAndValue must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'produce' is defined but never used.","'QuestionOutlineIcon' is defined but never used.",["289"],["290"],"no-unused-vars","'Entity' is defined but never used.","'Modifier' is defined but never used.","'Editor' is defined but never used.","'onSuggestionClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["289"],["290"],"'render' is defined but never used.","'EditorState' is defined but never used.","'contentState' is assigned a value but never used.","'editorState' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'getAutocompleteState'.","MethodDefinition","Duplicate name 'getAutocompleteRange'.","Duplicate name 'hasEntityAtSelection'.","'onChange' is assigned a value but never used.","'onEscape' is assigned a value but never used.","'onUpArrow' is assigned a value but never used.","'onDownArrow' is assigned a value but never used.","'onAutocompleteChange' is assigned a value but never used.",["289"],["290"],["289"],["290"],["289"],["290"],"'Switch' is defined but never used.","'CloseIcon' is defined but never used.","'FunctionItem' is defined but never used.","'Fade' is defined but never used.","'ArrowUpDownIcon' is defined but never used.","'AutocompleteInput' is defined but never used.","'hasCommandModifier' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","'setAutocompleteDescription' is assigned a value but never used.","'filteredFunctions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'descriptionDecorator' and 'dispatch'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["291"],"no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},"Update the dependencies array to be: [descriptionDecorator, dispatch, index]",{"range":"294","text":"295"},[16968,16990],"[descriptionDecorator, dispatch, index]"]