[{"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/index.tsx":"1","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/ColorModeSwitcher.tsx":"2","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/serviceWorker.ts":"3","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/reportWebVitals.ts":"4","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Sidebar.tsx":"5","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/_App.js":"6","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/App.tsx":"7","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/CardHStack.tsx":"8","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/TypeBadge.tsx":"9","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/FlowCard.tsx":"10","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Card.tsx":"11","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/state.ts":"12","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/FunctionCreationForm.tsx":"13","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Editor.tsx":"14"},{"size":837,"mtime":1606750026369,"results":"15","hashOfConfig":"16"},{"size":743,"mtime":1606395811243,"results":"17","hashOfConfig":"16"},{"size":5258,"mtime":1606395314403,"results":"18","hashOfConfig":"16"},{"size":416,"mtime":1606395314402,"results":"19","hashOfConfig":"16"},{"size":7869,"mtime":1607309279870,"results":"20","hashOfConfig":"16"},{"size":7738,"mtime":1606749524038,"results":"21","hashOfConfig":"16"},{"size":5611,"mtime":1607309805588,"results":"22","hashOfConfig":"16"},{"size":343,"mtime":1606814035751,"results":"23","hashOfConfig":"16"},{"size":813,"mtime":1606824602130,"results":"24","hashOfConfig":"16"},{"size":3825,"mtime":1607276137129,"results":"25","hashOfConfig":"16"},{"size":605,"mtime":1606852903166,"results":"26","hashOfConfig":"16"},{"size":4681,"mtime":1607305942318,"results":"27","hashOfConfig":"16"},{"size":8049,"mtime":1607300541875,"results":"28","hashOfConfig":"16"},{"size":614,"mtime":1607174110372,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"5rdob7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/index.tsx",[],["65","66"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/ColorModeSwitcher.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/serviceWorker.ts",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/reportWebVitals.ts",[],["67","68"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Sidebar.tsx",["69"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/_App.js",["70"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/App.tsx",["71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/CardHStack.tsx",[],["106","107"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/TypeBadge.tsx",["108"],"import * as React from 'react'\nimport { Code } from '@chakra-ui/react'\nimport { Itype } from './interfaces'\nconst TypeBadge = ({ children, ...rest }: { children: Itype }) => {\n  return (\n    <Code\n      colorScheme={(() => {\n        switch (children) {\n          case 'string':\n            return 'yellow'\n          case 'number':\n            return 'green'\n          case 'boolean':\n            return 'blue'\n          case 'function':\n            return 'purple'\n          case 'object':\n            return 'red'\n          case 'array':\n            return 'red'\n          case 'undefined':\n            return 'black'\n          case 'null':\n            return 'black'\n          default:\n            let x: never = children\n        }\n      })()}\n    >\n      {children}\n    </Code>\n  )\n}\n\nexport default TypeBadge\n","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/FlowCard.tsx",["109"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Card.tsx",[],["110","111"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/state.ts",["112","113"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/FunctionCreationForm.tsx",["114","115","116","117","118","119"],"import * as React from 'react'\nimport {\n  HStack,\n  Editable,\n  EditablePreview,\n  EditableInput,\n  Text,\n  Textarea,\n  Code,\n  EditableProps,\n  IconButton,\n} from '@chakra-ui/react'\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react'\nimport { AddIcon, ArrowForwardIcon, ChevronDownIcon } from '@chakra-ui/icons'\nimport Card from './Card'\n// import useAutocomplete from '@material-ui/lab/useAutocomplete'\n// import Autosuggest from 'react-autosuggest'\nimport { useCombobox, useMultipleSelection } from 'downshift'\nimport Editor from './Editor'\nimport { Itype, Ifunction } from './interfaces'\nimport { matchSorter } from 'match-sorter'\nimport TypeBadge from './TypeBadge'\n\nconst EditableText = (props: EditableProps) => (\n  <Editable {...props}>\n    <EditablePreview />\n    <EditableInput\n      _focus={{\n        outline: '',\n      }}\n    />\n  </Editable>\n)\n\nconst defaultName = 'name'\nconst defaultType = '_'\nconst typeSuggestions: Array<{ title: Itype | 'New type' }> = [\n  { title: 'string' },\n  { title: 'boolean' },\n  { title: 'number' },\n]\nconst getFilteredTypeSuggestions = (\n  typeSuggestions_: typeof typeSuggestions,\n  inputValue: string,\n) => matchSorter(typeSuggestions_, inputValue, { keys: ['title'] })\n\nconst typeToName = (x: Itype | string, n: number): string => {\n  const suffix = n || ''\n  switch (x) {\n    case 'string':\n      return 's' + suffix\n    case 'number':\n      return 'n' + suffix\n    case 'boolean':\n      return 'bool' + suffix\n    case 'function':\n      return ['f', 'g', 'h', 'i', 'j'][n]\n    case 'object':\n      return 'o' + suffix\n    default:\n      return x\n    // case 'array':\n    //   return '' //TODO\n    // case 'undefined':\n    // case 'null':\n    //   return ''\n  }\n}\n\nconst FunctionCreationForm = ({\n  fn,\n}: {\n  fn?: Ifunction & { parameterTypes: Itype | '_' }\n}) => {\n  const [state, setState] = React.useState({\n    name: fn?.name || '',\n    params: /*fn?.parameterTypes\n      .map(type => ({ type }))\n      .concat({ type: fn.returnType }) ||*/ [\n      { type: defaultType },\n      { type: defaultType },\n    ],\n    description: fn?.description || '',\n    code: fn?.code || '',\n  })\n  const { name, params, description, code } = state\n  const onChangeName = (name: string) => setState(state => ({ ...state, name }))\n  const onChangeDescription = (description: string) =>\n    setState(state => ({ ...state, description }))\n  const onChangeParam = (v: string, i: number) => {\n    setState(state => {\n      const params = [...state.params]\n      const param = params[i]\n      params[i] = { type: v }\n      return { ...state, params }\n    })\n  }\n  const addParam = () => {\n    setState(state => ({\n      ...state,\n      params: state.params.concat({ type: defaultType }),\n    }))\n  }\n\n  const [typeSuggestionsList, setTypeSuggestionsList] = React.useState(\n    typeSuggestions,\n  )\n  const [focusedInputIndex, setFocusedInputIndex] = React.useState(0)\n  const [inputValue, setInputValue] = React.useState('')\n  const onFocusInput = (i: number) => {\n    setFocusedInputIndex(i)\n  }\n\n  const {\n    isOpen,\n    // getToggleButtonProps,\n    // getLabelProps,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    highlightedIndex,\n    getItemProps,\n    // selectItem,\n  } = useCombobox({\n    inputValue,\n    items: typeSuggestionsList,\n    onInputValueChange: ({ inputValue }) => {\n      console.log({ inputValue })\n      if (!inputValue) {\n        return\n      }\n      setTypeSuggestionsList(\n        getFilteredTypeSuggestions(typeSuggestionsList, inputValue),\n      )\n    },\n  })\n  const nameFontStyle = [defaultName, ''].includes(name) ? 'italic' : 'normal'\n  const nameColor = [defaultName, ''].includes(name) ? 'gray.400' : 'normal'\n\n  // const paramString: string = params.reduce(\n  //   (acc, p) => {\n  //     acc.typeCount[p.type] = acc.typeCount[p.type]\n  //       ? acc.typeCount[p.type] + 1\n  //       : 0\n  //     const prefix = acc.result === '' ? '' : ', '\n  //     acc.result = acc.result + typeToName(p.type, acc.typeCount[p.type])\n  //     return acc\n  //   },\n  //   { result: '', typeCount: {} },\n  // ).result\n\n  const editorValue = `function ${name}(${params\n    .map(({ type }) => type)\n    .join(',')}) {\\n}`\n  return (\n    <Card>\n      <EditableText\n        value={name}\n        onChange={onChangeName}\n        placeholder={defaultName}\n        fontSize='3xl'\n        textColor={nameColor}\n        fontStyle={nameFontStyle}\n      />\n      <Code fontSize='xl'>\n        <HStack>\n          <EditableText\n            as='span'\n            placeholder={defaultName}\n            fontStyle={nameFontStyle}\n            width={(name || defaultName).length * 12 + 12 + 'px'}\n            value={name}\n            textColor={nameColor}\n            onChange={onChangeName}\n          />\n          <Text as='span'>: </Text>\n          {params.map((param, i) => (\n            <React.Fragment key={i}>\n              {i === 0 ? null : <ArrowForwardIcon></ArrowForwardIcon>}\n              <Editable\n                value={param.type}\n                // placeholder={defaultType} //TODOr\n                textColor={param.type === defaultType ? 'gray.400' : 'normal'}\n                display='inline'\n                width={param.type.length * 12 + 12 + 'px'}\n                onChange={v => onChangeParam(v, i)}\n                {...getComboboxProps()}\n              >\n                <EditablePreview />\n                <EditableInput\n                  onFocus={() => onFocusInput(i)}\n                  _focus={{ outline: 'none' }}\n                  {...getInputProps()}\n                />\n                <ul\n                  {...getMenuProps()}\n                  style={{\n                    position: 'absolute',\n                    background: 'white',\n                    borderRadius: '10%',\n                    border: '1px solid gray',\n                    zIndex: '20000',\n                    color: 'black',\n                  }}\n                >\n                  {isOpen &&\n                    i === focusedInputIndex &&\n                    typeSuggestions.map((item, index) => (\n                      <li\n                        style={\n                          highlightedIndex === index\n                            ? { backgroundColor: '#bde4ff' }\n                            : {}\n                        }\n                        key={`${item.title}${index}`}\n                        {...getItemProps({ item, index })}\n                      >\n                        {item.title === 'New type' ? (\n                          <Code>{item.title}</Code>\n                        ) : (\n                          <TypeBadge>{item.title}</TypeBadge>\n                        )}\n                      </li>\n                    ))}\n                </ul>\n              </Editable>\n              {i === params.length - 1 ? (\n                <IconButton\n                  aria-label='Add parameter'\n                  icon={<AddIcon />}\n                  onClick={addParam}\n                />\n              ) : null}\n            </React.Fragment>\n          ))}\n        </HStack>\n      </Code>\n      {/* <Input maxWidth='50%' value={'a'}></Input> */}\n\n      {/* <Input maxWidth='50%'></Input> */}\n\n      {/* <HStack>\n        <EditableText></EditableText>\n        <Text> : </Text>\n        <Input maxWidth='50%'></Input>\n        <ArrowForwardIcon></ArrowForwardIcon>\n        <Input maxWidth='50%'></Input>\n      </HStack> */}\n\n      <Textarea\n        fontSize='xl'\n        placeholder='Description'\n        onChange={e => {\n          onChangeDescription(e.target.value)\n        }}\n        value={description}\n        marginTop={5}\n      ></Textarea>\n\n      <Tabs marginTop={5}>\n        <TabList>\n          <Tab>Regular editor</Tab>\n          <Tab>Structured editor</Tab>\n        </TabList>\n        <TabPanels>\n          <TabPanel>\n            <Editor value={editorValue}></Editor>\n          </TabPanel>\n          <TabPanel>\n            <Code>{editorValue}</Code>\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </Card>\n  )\n}\nexport default FunctionCreationForm\n",["120","121"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Editor.tsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":149,"column":29,"nodeType":"130","messageId":"131","endLine":149,"endColumn":37},{"ruleId":"132","severity":1,"message":"133","line":40,"column":7,"nodeType":"130","messageId":"131","endLine":40,"endColumn":11},{"ruleId":"128","severity":1,"message":"134","line":2,"column":27,"nodeType":"130","messageId":"131","endLine":2,"endColumn":36},{"ruleId":"128","severity":1,"message":"135","line":2,"column":38,"nodeType":"130","messageId":"131","endLine":2,"endColumn":47},{"ruleId":"128","severity":1,"message":"136","line":3,"column":16,"nodeType":"130","messageId":"131","endLine":3,"endColumn":20},{"ruleId":"128","severity":1,"message":"137","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":10},{"ruleId":"128","severity":1,"message":"138","line":7,"column":3,"nodeType":"130","messageId":"131","endLine":7,"endColumn":6},{"ruleId":"128","severity":1,"message":"139","line":8,"column":3,"nodeType":"130","messageId":"131","endLine":8,"endColumn":9},{"ruleId":"128","severity":1,"message":"140","line":9,"column":3,"nodeType":"130","messageId":"131","endLine":9,"endColumn":9},{"ruleId":"128","severity":1,"message":"141","line":10,"column":12,"nodeType":"130","messageId":"131","endLine":10,"endColumn":18},{"ruleId":"128","severity":1,"message":"142","line":12,"column":3,"nodeType":"130","messageId":"131","endLine":12,"endColumn":9},{"ruleId":"128","severity":1,"message":"143","line":13,"column":3,"nodeType":"130","messageId":"131","endLine":13,"endColumn":9},{"ruleId":"128","severity":1,"message":"144","line":14,"column":3,"nodeType":"130","messageId":"131","endLine":14,"endColumn":7},{"ruleId":"128","severity":1,"message":"145","line":15,"column":3,"nodeType":"130","messageId":"131","endLine":15,"endColumn":9},{"ruleId":"128","severity":1,"message":"146","line":16,"column":3,"nodeType":"130","messageId":"131","endLine":16,"endColumn":8},{"ruleId":"128","severity":1,"message":"147","line":17,"column":3,"nodeType":"130","messageId":"131","endLine":17,"endColumn":7},{"ruleId":"128","severity":1,"message":"148","line":18,"column":3,"nodeType":"130","messageId":"131","endLine":18,"endColumn":13},{"ruleId":"128","severity":1,"message":"149","line":19,"column":3,"nodeType":"130","messageId":"131","endLine":19,"endColumn":11},{"ruleId":"128","severity":1,"message":"150","line":20,"column":3,"nodeType":"130","messageId":"131","endLine":20,"endColumn":11},{"ruleId":"128","severity":1,"message":"151","line":21,"column":3,"nodeType":"130","messageId":"131","endLine":21,"endColumn":17},{"ruleId":"128","severity":1,"message":"152","line":22,"column":3,"nodeType":"130","messageId":"131","endLine":22,"endColumn":12},{"ruleId":"128","severity":1,"message":"153","line":23,"column":3,"nodeType":"130","messageId":"131","endLine":23,"endColumn":18},{"ruleId":"128","severity":1,"message":"154","line":24,"column":3,"nodeType":"130","messageId":"131","endLine":24,"endColumn":11},{"ruleId":"128","severity":1,"message":"155","line":25,"column":3,"nodeType":"130","messageId":"131","endLine":25,"endColumn":14},{"ruleId":"128","severity":1,"message":"156","line":26,"column":3,"nodeType":"130","messageId":"131","endLine":26,"endColumn":14},{"ruleId":"128","severity":1,"message":"157","line":27,"column":3,"nodeType":"130","messageId":"131","endLine":27,"endColumn":13},{"ruleId":"128","severity":1,"message":"158","line":28,"column":3,"nodeType":"130","messageId":"131","endLine":28,"endColumn":17},{"ruleId":"128","severity":1,"message":"159","line":29,"column":3,"nodeType":"130","messageId":"131","endLine":29,"endColumn":18},{"ruleId":"128","severity":1,"message":"160","line":30,"column":3,"nodeType":"130","messageId":"131","endLine":30,"endColumn":11},{"ruleId":"128","severity":1,"message":"161","line":31,"column":3,"nodeType":"130","messageId":"131","endLine":31,"endColumn":18},{"ruleId":"128","severity":1,"message":"162","line":32,"column":3,"nodeType":"130","messageId":"131","endLine":32,"endColumn":16},{"ruleId":"128","severity":1,"message":"163","line":33,"column":3,"nodeType":"130","messageId":"131","endLine":33,"endColumn":7},{"ruleId":"128","severity":1,"message":"164","line":34,"column":3,"nodeType":"130","messageId":"131","endLine":34,"endColumn":7},{"ruleId":"128","severity":1,"message":"165","line":35,"column":3,"nodeType":"130","messageId":"131","endLine":35,"endColumn":11},{"ruleId":"128","severity":1,"message":"166","line":39,"column":10,"nodeType":"130","messageId":"131","endLine":39,"endColumn":27},{"ruleId":"128","severity":1,"message":"167","line":41,"column":10,"nodeType":"130","messageId":"131","endLine":41,"endColumn":26},{"ruleId":"128","severity":1,"message":"168","line":42,"column":8,"nodeType":"130","messageId":"131","endLine":42,"endColumn":12},{"ruleId":"122","replacedBy":"169"},{"ruleId":"124","replacedBy":"170"},{"ruleId":"128","severity":1,"message":"171","line":26,"column":17,"nodeType":"130","messageId":"131","endLine":26,"endColumn":25},{"ruleId":"128","severity":1,"message":"172","line":14,"column":3,"nodeType":"130","messageId":"131","endLine":14,"endColumn":13},{"ruleId":"122","replacedBy":"173"},{"ruleId":"124","replacedBy":"174"},{"ruleId":"128","severity":1,"message":"175","line":5,"column":3,"nodeType":"130","messageId":"131","endLine":5,"endColumn":21},{"ruleId":"128","severity":1,"message":"176","line":114,"column":7,"nodeType":"130","messageId":"131","endLine":114,"endColumn":24},{"ruleId":"128","severity":1,"message":"177","line":14,"column":37,"nodeType":"130","messageId":"131","endLine":14,"endColumn":52},{"ruleId":"128","severity":1,"message":"178","line":18,"column":23,"nodeType":"130","messageId":"131","endLine":18,"endColumn":43},{"ruleId":"128","severity":1,"message":"179","line":47,"column":7,"nodeType":"130","messageId":"131","endLine":47,"endColumn":17},{"ruleId":"128","severity":1,"message":"180","line":86,"column":38,"nodeType":"130","messageId":"131","endLine":86,"endColumn":42},{"ruleId":"128","severity":1,"message":"181","line":93,"column":13,"nodeType":"130","messageId":"131","endLine":93,"endColumn":18},{"ruleId":"128","severity":1,"message":"182","line":109,"column":22,"nodeType":"130","messageId":"131","endLine":109,"endColumn":35},{"ruleId":"122","replacedBy":"183"},{"ruleId":"124","replacedBy":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],["185"],["186"],"@typescript-eslint/no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","no-unused-vars","'grid' is assigned a value but never used.","'Droppable' is defined but never used.","'Draggable' is defined but never used.","'uuid' is defined but never used.","'ts' is defined but never used.","'Box' is defined but never used.","'Center' is defined but never used.","'Button' is defined but never used.","'_theme' is defined but never used.","'HStack' is defined but never used.","'VStack' is defined but never used.","'Code' is defined but never used.","'Spacer' is defined but never used.","'Input' is defined but never used.","'Menu' is defined but never used.","'MenuButton' is defined but never used.","'MenuList' is defined but never used.","'MenuItem' is defined but never used.","'MenuItemOption' is defined but never used.","'MenuGroup' is defined but never used.","'MenuOptionGroup' is defined but never used.","'MenuIcon' is defined but never used.","'MenuCommand' is defined but never used.","'MenuDivider' is defined but never used.","'InputGroup' is defined but never used.","'InputLeftAddon' is defined but never used.","'InputRightAddon' is defined but never used.","'Editable' is defined but never used.","'EditablePreview' is defined but never used.","'EditableInput' is defined but never used.","'Flex' is defined but never used.","'Text' is defined but never used.","'Textarea' is defined but never used.","'ColorModeSwitcher' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'Card' is defined but never used.",["185"],["186"],"'x' is assigned a value but never used.","'IconButton' is defined but never used.",["185"],["186"],"'IsmallFunctionView' is defined but never used.","'flowCardFunctions' is defined but never used.","'ChevronDownIcon' is defined but never used.","'useMultipleSelection' is defined but never used.","'typeToName' is assigned a value but never used.","'code' is assigned a value but never used.","'param' is assigned a value but never used.","'setInputValue' is assigned a value but never used.",["185"],["186"],"no-global-assign","no-unsafe-negation"]