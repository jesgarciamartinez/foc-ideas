[{"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/index.tsx":"1","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/ColorModeSwitcher.tsx":"2","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/serviceWorker.ts":"3","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/reportWebVitals.ts":"4","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Sidebar.tsx":"5","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/App.tsx":"6","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/CardHStack.tsx":"7","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/TypeBadge.tsx":"8","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/FlowCard.tsx":"9","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Card.tsx":"10","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/state.ts":"11","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Editor.tsx":"12","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/PopoverExplanation.tsx":"13","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/EditableText.tsx":"14","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/theme.ts":"15","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/DocsCard.tsx":"16"},{"size":953,"mtime":1607783634378,"results":"17","hashOfConfig":"18"},{"size":743,"mtime":1606395811243,"results":"19","hashOfConfig":"18"},{"size":5258,"mtime":1606395314403,"results":"20","hashOfConfig":"18"},{"size":416,"mtime":1606395314402,"results":"21","hashOfConfig":"18"},{"size":12742,"mtime":1607866144657,"results":"22","hashOfConfig":"18"},{"size":5214,"mtime":1607872124927,"results":"23","hashOfConfig":"18"},{"size":343,"mtime":1607860771406,"results":"24","hashOfConfig":"18"},{"size":1808,"mtime":1607866367026,"results":"25","hashOfConfig":"18"},{"size":13431,"mtime":1607871226258,"results":"26","hashOfConfig":"18"},{"size":605,"mtime":1606852903166,"results":"27","hashOfConfig":"18"},{"size":7457,"mtime":1607870805405,"results":"28","hashOfConfig":"18"},{"size":614,"mtime":1607174110372,"results":"29","hashOfConfig":"18"},{"size":1292,"mtime":1607869900460,"results":"30","hashOfConfig":"18"},{"size":393,"mtime":1607635865658,"results":"31","hashOfConfig":"18"},{"size":2033,"mtime":1607865814484,"results":"32","hashOfConfig":"18"},{"size":11765,"mtime":1607871788073,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5rdob7",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/index.tsx",["69"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/ColorModeSwitcher.tsx",[],["70","71"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/serviceWorker.ts",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/reportWebVitals.ts",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Sidebar.tsx",["72","73","74","75"],"import * as React from 'react'\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\nimport type { Ieffect, Itype, Ifunction } from './interfaces'\nimport {\n  Box,\n  Code,\n  forwardRef,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Text,\n  Kbd,\n  ListItem,\n  UnorderedList,\n  Center,\n  useTheme,\n  InputRightElement,\n  InputRightAddon,\n  HStack,\n} from '@chakra-ui/react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TreeView from '@material-ui/lab/TreeView'\nimport TreeItem from '@material-ui/lab/TreeItem'\nimport {\n  ChevronDownIcon,\n  ChevronRightIcon,\n  ArrowForwardIcon,\n  SearchIcon,\n} from '@chakra-ui/icons'\nimport { FaShapes } from 'react-icons/fa'\n// import { VscSymbolMisc as FaShapes } from 'react-icons/vsc'\nimport { GiMineExplosion } from 'react-icons/gi'\n// import { IoShapes } from 'react-icons/io' //RiFunctionLine, RiFunctionFill //IoShapesOutline\nimport './sideBarStyles.css'\nimport TypeBadge from './TypeBadge'\nimport { Action } from '../state'\nimport MouseTrap from 'mousetrap'\n// import { FlowFunctionView } from './FlowCard'\nimport PopoverExplanation from './PopoverExplanation'\nimport { ColorModeSwitcher } from '../ColorModeSwitcher'\n\ntype IsideBarItem =\n  | {\n      nodeId: 'functions'\n      label: 'Functions'\n      items: Array<Ifunction>\n    }\n  | {\n      nodeId: 'types'\n      label: 'Data Types'\n      items: Array<Itype>\n    }\n  | {\n      nodeId: 'effects'\n      label: 'Effects'\n      items: Array<Ieffect>\n    }\n\nconst FunctionItem = (props: Ifunction) => {\n  return (\n    <Text\n      wrap='nowrap'\n      color='unison.purple'\n      _hover={{ color: 'unison.lightPurple' }}\n    >\n      <Code\n        fontSize='sm'\n        // fontWeight='700'\n        paddingX={1}\n        paddingY={0.5}\n        rounded='base'\n        backgroundColor='transparent'\n        color='inherit'\n      >\n        {props.name}\n      </Code>\n      <Text as='span'>: </Text>\n      <Text as={'span'} flexWrap='nowrap'>\n        {props.parameters.map((p, i) => (\n          <Text as='span' key={i}>\n            <TypeBadge typeAsString={p.type} />\n            <ArrowForwardIcon marginX={1} />\n          </Text>\n        ))}\n      </Text>\n      <TypeBadge typeAsString={props.returns.type} />\n    </Text>\n  )\n}\n\nconst getFunctionRenderItem = (props: Ifunction) => (\n  provided: any,\n  snapshot: any,\n  rubric: any,\n) => {\n  return (\n    <div\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n      ref={provided.innerRef}\n      style={provided.draggableProps.style}\n    >\n      <div>\n        <FunctionItem {...props} />\n        {/* <FlowFunctionView item={{ ...props }} /> */}\n      </div>\n    </div>\n  )\n}\nconst useTreeItemStyles = makeStyles({\n  root: {\n    marginBottom: '5px',\n  },\n  content: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n      cursor: 'grabbing',\n    },\n  },\n})\n\nconst FunctionTreeItem = (\n  props: Ifunction & { nodeId: string; isAnyItemDragging: boolean },\n) => {\n  const { root, content } = useTreeItemStyles()\n  return (\n    <TreeItem\n      classes={{ root, content: props.isAnyItemDragging ? content : undefined }}\n      nodeId={props.nodeId}\n      label={\n        <Droppable\n          droppableId={props.nodeId}\n          renderClone={getFunctionRenderItem(props)}\n          isDropDisabled={true}\n        >\n          {(provided, snapshot) => {\n            const shouldRenderClone =\n              props.nodeId === snapshot.draggingFromThisWith\n            return (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {shouldRenderClone ? (\n                  <div className='react-beautiful-dnd-copy'>\n                    <FunctionItem {...props}></FunctionItem>\n                  </div>\n                ) : (\n                  <Draggable draggableId={props.nodeId} index={0}>\n                    {(provided, snapshot) => {\n                      return (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <FunctionItem {...props}></FunctionItem>\n                        </div>\n                      )\n                    }}\n                  </Draggable>\n                )}\n                {/* {provided.placeholder} */}\n              </div>\n            )\n          }}\n        </Droppable>\n      }\n    ></TreeItem>\n  )\n}\nconst TypeTreeItem = (\n  props: Itype & { nodeId: string; isAnyItemDragging: boolean },\n) => {\n  const { content } = useTreeItemStyles()\n  return (\n    <TreeItem\n      nodeId={props.nodeId}\n      classes={{ content: props.isAnyItemDragging ? content : undefined }}\n      label={props.type}\n    />\n  )\n}\n\nconst Sidebar = React.memo(\n  forwardRef(\n    (\n      {\n        items,\n        isAnyItemDragging,\n        dispatch,\n        searchValue,\n      }: {\n        items: Array<IsideBarItem>\n        isAnyItemDragging: boolean\n        dispatch: React.Dispatch<Action>\n        searchValue: string\n      },\n      ref,\n    ) => {\n      const theme = useTheme()\n      const {\n        colors: {\n          unison: { purple, lightPurple, pink },\n        },\n      } = theme\n\n      //Search\n      const [isHoveringSearch, setIsHoveringSearch] = React.useState(false)\n      const onMouseEnterSearch = React.useCallback(() => {\n        setIsHoveringSearch(true)\n      }, [])\n      const onMouseLeaveSearch = React.useCallback(() => {\n        setIsHoveringSearch(false)\n      }, [])\n\n      return (\n        <Box height='100%' flex={1} backgroundColor={'purple.50'}>\n          <InputGroup\n            width='100%'\n            whiteSpace='nowrap'\n            padding={1}\n            display='flex'\n            onMouseEnter={onMouseEnterSearch}\n            onMouseLeave={onMouseLeaveSearch}\n            // _focusWithin={{ color: 'teal.600' }}\n          >\n            <InputLeftElement\n              pointerEvents='none'\n              children={<SearchIcon color={purple} />} //TODO teal\n            />\n            <Input\n              ref={ref}\n              placeholder='Search'\n              variant='outline'\n              _hover={{ borderBottomColor: lightPurple }}\n              focusBorderColor={'unison.aqua'}\n              size='md'\n              borderRadius='0%'\n              borderTop='none'\n              borderLeft='none'\n              borderRight='none'\n              borderBottom={`2px solid ${purple}`}\n              value={searchValue}\n              onChange={e =>\n                dispatch({ type: 'sideBarSearch', value: e.target.value })\n              }\n            />\n            {isHoveringSearch ? (\n              <HStack\n                background='transparent'\n                position='absolute'\n                right={2}\n                top={2}\n              >\n                <Kbd>ctrl</Kbd>\n                <Text>/</Text>\n                <Kbd>⌘</Kbd>\n                <Text>+</Text>\n                <Kbd>B</Kbd>\n              </HStack>\n            ) : null}\n          </InputGroup>\n          <Center>\n            <ColorModeSwitcher></ColorModeSwitcher>\n            <PopoverExplanation label='Sidebar explanation' title='Sidebar'>\n              <UnorderedList>\n                <ListItem>\n                  Drag functions and drop them onto Flow Card or Docs Card\n                </ListItem>\n                <ListItem>\n                  <Kbd>up</Kbd>, <Kbd>down</Kbd>, <Kbd>left</Kbd>,{' '}\n                  <Kbd>right</Kbd> to move in Sidebar\n                </ListItem>\n                <ListItem>\n                  <Kbd>space</Kbd> to drag, <Kbd>right</Kbd> then{' '}\n                  <Kbd>space</Kbd> to drop\n                </ListItem>\n              </UnorderedList>\n            </PopoverExplanation>\n          </Center>\n\n          <TreeView\n            selected={[]}\n            aria-label='Functions, types and effects'\n            defaultCollapseIcon={<ChevronDownIcon color='unison.purple' />}\n            defaultExpandIcon={<ChevronRightIcon color='unison.purple' />}\n            onNodeFocus={(e, v) => {\n              const draggable: any = document.querySelector(\n                `[data-rbd-draggable-id=\"${v}\"]`,\n              )\n\n              if (draggable) {\n                const focused = document.querySelectorAll('.Mui-focused')\n                focused.forEach(e => {\n                  e.classList.remove('Mui-focused')\n                })\n                const div =\n                  draggable.parentElement?.parentElement?.parentElement\n                const li = div?.parentElement\n                const parentMenu =\n                  li?.parentElement?.parentElement?.parentElement?.parentElement\n                const previous = li?.previousElementSibling\n                const next = li?.nextElementSibling\n\n                if (!draggable.bound) {\n                  draggable.bound = true\n                  MouseTrap(draggable).bind('left', e => {\n                    if (isAnyItemDragging) {\n                      return\n                    }\n                    div?.classList.remove('Mui-focused')\n                    parentMenu?.focus()\n                  })\n                  MouseTrap(draggable).bind('down', e => {\n                    if (isAnyItemDragging) {\n                      return\n                    }\n                    if (next) {\n                      next.focus()\n                      div?.classList.remove('Mui-focused')\n                    } else {\n                      parentMenu?.nextElementSibling?.focus()\n                      div?.classList.remove('Mui-focused')\n                    }\n                  })\n                  MouseTrap(draggable).bind('up', e => {\n                    if (isAnyItemDragging) {\n                      return\n                    }\n                    if (previous) {\n                      previous.focus()\n                      div?.classList.remove('Mui-focused')\n                    } else {\n                      parentMenu?.focus()\n                      div?.classList.remove('Mui-focused')\n                    }\n                  })\n                }\n\n                div?.classList.add('Mui-focused')\n                draggable.focus()\n              }\n            }}\n          >\n            {items &&\n              items.map(item => {\n                const label = (\n                  <Text fontSize='xl' color={'unison.purple'}>\n                    {item.label}\n                  </Text>\n                )\n                return (\n                  <TreeItem\n                    nodeId={item.nodeId}\n                    key={item.nodeId}\n                    label={\n                      <HStack>\n                        {item.nodeId === 'functions' ? (\n                          <Text fontWeight='bold' fontSize='xl' color={purple}>\n                            λ\n                          </Text>\n                        ) : item.nodeId === 'types' ? (\n                          <FaShapes color={purple} />\n                        ) : item.nodeId === 'effects' ? (\n                          <GiMineExplosion color={purple} />\n                        ) : null}\n                        {label}\n                      </HStack>\n                    }\n                  >\n                    {(() => {\n                      switch (item.nodeId) {\n                        case 'functions':\n                          return item.items.map(innerItem => {\n                            const id = `${item.nodeId}_${innerItem.name}`\n                            return (\n                              <FunctionTreeItem\n                                {...innerItem}\n                                key={id}\n                                nodeId={id}\n                                isAnyItemDragging={!!isAnyItemDragging}\n                              />\n                            )\n                          })\n                        case 'types':\n                          return item.items.map(innerItem => {\n                            const id = `${item.nodeId}_${innerItem.type}`\n                            return (\n                              <TypeTreeItem\n                                {...innerItem}\n                                key={id}\n                                nodeId={id}\n                                isAnyItemDragging={!!isAnyItemDragging}\n                              />\n                            )\n                          })\n                        case 'effects':\n                          return null //@TODO\n                        default:\n                          let _: never = item\n                      }\n                    })()}\n                  </TreeItem>\n                )\n              })}\n          </TreeView>\n        </Box>\n      )\n    },\n  ),\n)\n\nexport default Sidebar\n","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/App.tsx",["76"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/CardHStack.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/TypeBadge.tsx",["77","78"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/FlowCard.tsx",["79","80","81","82","83","84"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Card.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/state.ts",["85"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Editor.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/PopoverExplanation.tsx",["86"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/EditableText.tsx",[],["87","88"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/theme.ts",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/DocsCard.tsx",["89","90","91","92","93","94","95","96","97","98"],{"ruleId":"99","severity":1,"message":"100","line":3,"column":27,"nodeType":"101","messageId":"102","endLine":3,"endColumn":38},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"99","severity":1,"message":"107","line":17,"column":3,"nodeType":"101","messageId":"102","endLine":17,"endColumn":20},{"ruleId":"99","severity":1,"message":"108","line":18,"column":3,"nodeType":"101","messageId":"102","endLine":18,"endColumn":18},{"ruleId":"99","severity":1,"message":"109","line":201,"column":42,"nodeType":"101","messageId":"102","endLine":201,"endColumn":46},{"ruleId":"99","severity":1,"message":"110","line":398,"column":31,"nodeType":"101","messageId":"102","endLine":398,"endColumn":39},{"ruleId":"99","severity":1,"message":"111","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":18},{"ruleId":"99","severity":1,"message":"112","line":12,"column":17,"nodeType":"101","messageId":"102","endLine":12,"endColumn":23},{"ruleId":"99","severity":1,"message":"113","line":12,"column":25,"nodeType":"101","messageId":"102","endLine":12,"endColumn":31},{"ruleId":"99","severity":1,"message":"114","line":22,"column":3,"nodeType":"101","messageId":"102","endLine":22,"endColumn":7},{"ruleId":"99","severity":1,"message":"115","line":29,"column":3,"nodeType":"101","messageId":"102","endLine":29,"endColumn":17},{"ruleId":"99","severity":1,"message":"116","line":176,"column":34,"nodeType":"101","messageId":"102","endLine":176,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":262,"column":25,"nodeType":"119","endLine":271,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":284,"column":17,"nodeType":"119","endLine":297,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":300,"column":15,"nodeType":"119","endLine":308,"endColumn":17},{"ruleId":"99","severity":1,"message":"120","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":15},{"ruleId":"99","severity":1,"message":"121","line":1,"column":24,"nodeType":"101","messageId":"102","endLine":1,"endColumn":43},{"ruleId":"103","replacedBy":"122"},{"ruleId":"105","replacedBy":"123"},{"ruleId":"99","severity":1,"message":"124","line":10,"column":3,"nodeType":"101","messageId":"102","endLine":10,"endColumn":16},{"ruleId":"99","severity":1,"message":"125","line":12,"column":3,"nodeType":"101","messageId":"102","endLine":12,"endColumn":8},{"ruleId":"99","severity":1,"message":"126","line":14,"column":3,"nodeType":"101","messageId":"102","endLine":14,"endColumn":9},{"ruleId":"99","severity":1,"message":"127","line":24,"column":3,"nodeType":"101","messageId":"102","endLine":24,"endColumn":18},{"ruleId":"99","severity":1,"message":"128","line":25,"column":3,"nodeType":"101","messageId":"102","endLine":25,"endColumn":13},{"ruleId":"99","severity":1,"message":"129","line":27,"column":8,"nodeType":"101","messageId":"102","endLine":27,"endColumn":12},{"ruleId":"99","severity":1,"message":"130","line":30,"column":23,"nodeType":"101","messageId":"102","endLine":30,"endColumn":43},{"ruleId":"99","severity":1,"message":"131","line":89,"column":38,"nodeType":"101","messageId":"102","endLine":89,"endColumn":42},{"ruleId":"99","severity":1,"message":"132","line":96,"column":13,"nodeType":"101","messageId":"102","endLine":96,"endColumn":18},{"ruleId":"99","severity":1,"message":"133","line":112,"column":22,"nodeType":"101","messageId":"102","endLine":112,"endColumn":35},"@typescript-eslint/no-unused-vars","'extendTheme' is defined but never used.","Identifier","unusedVar","no-native-reassign",["134"],"no-negated-in-lhs",["135"],"'InputRightElement' is defined but never used.","'InputRightAddon' is defined but never used.","'pink' is assigned a value but never used.","'_' is assigned a value but never used.","'useTheme' is defined but never used.","'orange' is assigned a value but never used.","'yellow' is assigned a value but never used.","'Text' is defined but never used.","'PlusSquareIcon' is defined but never used.","'id' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component C_TypeAndValue must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'produce' is defined but never used.","'QuestionOutlineIcon' is defined but never used.",["134"],["135"],"'EditableProps' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'ChevronDownIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'Card' is defined but never used.","'useMultipleSelection' is defined but never used.","'code' is assigned a value but never used.","'param' is assigned a value but never used.","'setInputValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]