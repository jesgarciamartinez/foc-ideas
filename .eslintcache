[{"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/index.tsx":"1","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/ColorModeSwitcher.tsx":"2","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/serviceWorker.ts":"3","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/reportWebVitals.ts":"4","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Sidebar.tsx":"5","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/App.tsx":"6","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/CardHStack.tsx":"7","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/TypeBadge.tsx":"8","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/FlowCard.tsx":"9","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Card.tsx":"10","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/state.ts":"11","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Editor.tsx":"12","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/PopoverExplanation.tsx":"13","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/EditableText.tsx":"14","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/theme.ts":"15","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/utils.js":"16","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/index.js":"17","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/autocomplete.js":"18","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/triggers.js":"19","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/data.js":"20","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/styles.js":"21","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/addsuggestion.js":"22","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/suggestions.js":"23","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/DocsCard/components.tsx":"24","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/DocsCard/DocsCard.tsx":"25"},{"size":953,"mtime":1607783634378,"results":"26","hashOfConfig":"27"},{"size":743,"mtime":1606395811243,"results":"28","hashOfConfig":"27"},{"size":5258,"mtime":1606395314403,"results":"29","hashOfConfig":"27"},{"size":416,"mtime":1606395314402,"results":"30","hashOfConfig":"27"},{"size":13504,"mtime":1608451943308,"results":"31","hashOfConfig":"27"},{"size":7041,"mtime":1608462478595,"results":"32","hashOfConfig":"27"},{"size":395,"mtime":1608483947863,"results":"33","hashOfConfig":"27"},{"size":1370,"mtime":1608321098960,"results":"34","hashOfConfig":"27"},{"size":13573,"mtime":1608451893708,"results":"35","hashOfConfig":"27"},{"size":605,"mtime":1606852903166,"results":"36","hashOfConfig":"27"},{"size":10711,"mtime":1608465658735,"results":"37","hashOfConfig":"27"},{"size":870,"mtime":1608005300285,"results":"38","hashOfConfig":"27"},{"size":1295,"mtime":1608457387478,"results":"39","hashOfConfig":"27"},{"size":393,"mtime":1607635865658,"results":"40","hashOfConfig":"27"},{"size":2081,"mtime":1608324466728,"results":"41","hashOfConfig":"27"},{"size":408,"mtime":1608130752557,"results":"42","hashOfConfig":"27"},{"size":2398,"mtime":1608157691253,"results":"43","hashOfConfig":"27"},{"size":8928,"mtime":1608177181752,"results":"44","hashOfConfig":"27"},{"size":441,"mtime":1608130752556,"results":"45","hashOfConfig":"27"},{"size":182,"mtime":1608130752554,"results":"46","hashOfConfig":"27"},{"size":742,"mtime":1608130752556,"results":"47","hashOfConfig":"27"},{"size":1086,"mtime":1608130752553,"results":"48","hashOfConfig":"27"},{"size":859,"mtime":1608142377987,"results":"49","hashOfConfig":"27"},{"size":6172,"mtime":1608473933353,"results":"50","hashOfConfig":"27"},{"size":23118,"mtime":1608464376560,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"5rdob7",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/index.tsx",["117"],"import * as React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ColorModeScript, extendTheme, ChakraProvider } from '@chakra-ui/react'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\nimport * as serviceWorker from './serviceWorker'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n",["118","119"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/ColorModeSwitcher.tsx",[],["120","121"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/serviceWorker.ts",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/reportWebVitals.ts",[],["122","123"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Sidebar.tsx",["124","125","126"],"import * as React from 'react'\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\nimport type { Ieffect, Itype, Ifunction } from './interfaces'\nimport {\n  Box,\n  Code,\n  forwardRef,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Text,\n  Kbd,\n  ListItem,\n  UnorderedList,\n  Center,\n  useTheme,\n  InputRightElement,\n  InputRightAddon,\n  HStack,\n} from '@chakra-ui/react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TreeView from '@material-ui/lab/TreeView'\nimport TreeItem from '@material-ui/lab/TreeItem'\nimport {\n  ChevronDownIcon,\n  ChevronRightIcon,\n  ArrowForwardIcon,\n  SearchIcon,\n} from '@chakra-ui/icons'\nimport { FaShapes } from 'react-icons/fa'\n// import { VscSymbolMisc as FaShapes } from 'react-icons/vsc'\nimport { GiMineExplosion } from 'react-icons/gi'\n// import { IoShapes } from 'react-icons/io' //RiFunctionLine, RiFunctionFill //IoShapesOutline\nimport './sideBarStyles.css'\nimport TypeBadge from './TypeBadge'\nimport { Action } from '../state'\nimport MouseTrap from 'mousetrap'\n// import { FlowFunctionView } from './FlowCard'\nimport PopoverExplanation from './PopoverExplanation'\n\ntype IsideBarItem =\n  | {\n      nodeId: 'functions'\n      label: 'Functions'\n      items: Array<Ifunction>\n    }\n  | {\n      nodeId: 'types'\n      label: 'Data Types'\n      items: Array<Itype>\n    }\n  | {\n      nodeId: 'effects'\n      label: 'Effects'\n      items: Array<Ieffect>\n    }\n\nexport const FunctionItem = (props: Ifunction) => {\n  return (\n    <Text\n      wrap='nowrap'\n      color='unison.purple'\n      _hover={{ color: 'unison.lightPurple' }}\n    >\n      <Code\n        fontSize='sm'\n        // fontWeight='700'\n        paddingX={1}\n        paddingY={0.5}\n        rounded='base'\n        backgroundColor='transparent'\n        color='inherit'\n      >\n        {props.name}\n      </Code>\n      <Text as='span'>: </Text>\n      <Text as={'span'} flexWrap='nowrap'>\n        {props.parameters.map((p, i) => (\n          <Text as='span' key={i}>\n            <TypeBadge typeAsString={p.type} />\n            <ArrowForwardIcon marginX={1} />\n          </Text>\n        ))}\n      </Text>\n      <TypeBadge typeAsString={props.returns.type} />\n    </Text>\n  )\n}\n\nconst getFunctionRenderItem = (props: Ifunction) => (\n  provided: any,\n  snapshot: any,\n  rubric: any,\n) => {\n  return (\n    <div\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n      ref={provided.innerRef}\n      style={provided.draggableProps.style}\n    >\n      <div>\n        <FunctionItem {...props} />\n        {/* <FlowFunctionView item={{ ...props }} /> */}\n      </div>\n    </div>\n  )\n}\nconst useTreeItemStyles = makeStyles({\n  root: {\n    marginBottom: '5px',\n  },\n  content: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n      cursor: 'grabbing',\n    },\n  },\n})\n\nconst FunctionTreeItem = (\n  props: Ifunction & { nodeId: string; isAnyItemDragging: boolean },\n) => {\n  const { root, content } = useTreeItemStyles()\n  return (\n    <TreeItem\n      classes={{ root, content: props.isAnyItemDragging ? content : undefined }}\n      nodeId={props.nodeId}\n      label={\n        <Droppable\n          droppableId={props.nodeId}\n          renderClone={getFunctionRenderItem(props)}\n          isDropDisabled={true}\n        >\n          {(provided, snapshot) => {\n            const shouldRenderClone =\n              props.nodeId === snapshot.draggingFromThisWith\n            return (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {shouldRenderClone ? (\n                  <div className='react-beautiful-dnd-copy'>\n                    <FunctionItem {...props}></FunctionItem>\n                  </div>\n                ) : (\n                  <Draggable draggableId={props.nodeId} index={0}>\n                    {(provided, snapshot) => {\n                      return (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <FunctionItem {...props}></FunctionItem>\n                        </div>\n                      )\n                    }}\n                  </Draggable>\n                )}\n                {/* {provided.placeholder} */}\n              </div>\n            )\n          }}\n        </Droppable>\n      }\n    ></TreeItem>\n  )\n}\nconst TypeTreeItem = (\n  props: Itype & { nodeId: string; isAnyItemDragging: boolean },\n) => {\n  const { content } = useTreeItemStyles()\n  return (\n    <TreeItem\n      nodeId={props.nodeId}\n      classes={{ content: props.isAnyItemDragging ? content : undefined }}\n      label={<TypeBadge typeAsString={props.type}></TypeBadge>}\n    />\n  )\n}\n\nconst Sidebar = React.memo(\n  forwardRef(\n    (\n      {\n        items,\n        isAnyItemDragging,\n        dispatch,\n        searchValue,\n      }: {\n        items: Array<IsideBarItem>\n        isAnyItemDragging: boolean\n        dispatch: React.Dispatch<Action>\n        searchValue: string\n      },\n      ref,\n    ) => {\n      const theme = useTheme()\n      const {\n        colors: {\n          unison: { purple, lightPurple, aqua },\n        },\n      } = theme\n\n      //Search\n      const [isHoveringSearch, setIsHoveringSearch] = React.useState(false)\n      const [isFocusedSearch, setFocusedSearch] = React.useState(false)\n      const onMouseEnterSearch = React.useCallback(() => {\n        setIsHoveringSearch(true)\n      }, [])\n      const onMouseLeaveSearch = React.useCallback(() => {\n        setIsHoveringSearch(false)\n      }, [])\n\n      return (\n        <Box\n          height='100%'\n          flex={1}\n          backgroundColor={'purple.50'}\n          paddingTop={4}\n        >\n          <InputGroup\n            width='100%'\n            whiteSpace='nowrap'\n            padding={1}\n            display='flex'\n            onMouseEnter={onMouseEnterSearch}\n            onMouseLeave={onMouseLeaveSearch}\n            // _focusWithin={{ color: 'teal.600' }}\n          >\n            <InputLeftElement\n              pointerEvents='none'\n              children={\n                <SearchIcon\n                  color={\n                    isFocusedSearch\n                      ? aqua\n                      : isHoveringSearch\n                      ? lightPurple\n                      : purple\n                  }\n                />\n              } //TODO teal\n            />\n            <Input\n              ref={ref}\n              placeholder='Search'\n              variant='outline'\n              _hover={{ borderBottomColor: lightPurple }}\n              focusBorderColor={'unison.aqua'}\n              size='md'\n              borderRadius='0%'\n              borderTop='none'\n              borderLeft='none'\n              borderRight='none'\n              borderBottom={`2px solid ${purple}`}\n              value={searchValue}\n              onFocus={() => {\n                if (!ref || !('current' in ref)) return\n                ref.current.setSelectionRange(0, ref.current.value.length)\n                setFocusedSearch(true)\n              }}\n              onBlur={() => setFocusedSearch(false)}\n              onChange={e =>\n                dispatch({ type: 'sideBarSearch', value: e.target.value })\n              }\n            />\n            {isHoveringSearch ? (\n              <HStack\n                background='transparent'\n                position='absolute'\n                right={2}\n                top={2}\n                pointerEvents='none'\n              >\n                <Kbd>ctrl</Kbd>\n                <Text>/</Text>\n                <Kbd>⌘</Kbd>\n                <Text>+</Text>\n                <Kbd>B</Kbd>\n              </HStack>\n            ) : null}\n          </InputGroup>\n          <Center>\n            <PopoverExplanation label='Sidebar explanation' title='Sidebar'>\n              <UnorderedList>\n                <ListItem>\n                  Drag functions and drop them onto Flow Card or Docs Card\n                </ListItem>\n                <ListItem>\n                  <Kbd>up</Kbd>, <Kbd>down</Kbd>, <Kbd>left</Kbd>,{' '}\n                  <Kbd>right</Kbd> to move in Sidebar\n                </ListItem>\n                <ListItem>\n                  <Kbd>space</Kbd> to drag, <Kbd>right</Kbd> then{' '}\n                  <Kbd>space</Kbd> to drop\n                </ListItem>\n                <ListItem>\n                  Datatypes and Effects are not interactive at this point\n                </ListItem>\n              </UnorderedList>\n            </PopoverExplanation>\n          </Center>\n\n          <TreeView\n            selected={[]}\n            aria-label='Functions, types and effects'\n            defaultCollapseIcon={<ChevronDownIcon color='unison.purple' />}\n            defaultExpandIcon={<ChevronRightIcon color='unison.purple' />}\n            onNodeFocus={(e, v) => {\n              const draggable: any = document.querySelector(\n                `[data-rbd-draggable-id=\"${v}\"]`,\n              )\n\n              if (draggable) {\n                const focused = document.querySelectorAll('.Mui-focused')\n                focused.forEach(e => {\n                  e.classList.remove('Mui-focused')\n                })\n                const div =\n                  draggable.parentElement?.parentElement?.parentElement\n                const li = div?.parentElement\n                const parentMenu =\n                  li?.parentElement?.parentElement?.parentElement?.parentElement\n                const previous = li?.previousElementSibling\n                const next = li?.nextElementSibling\n\n                if (!draggable.bound) {\n                  draggable.bound = true\n                  MouseTrap(draggable).bind('left', e => {\n                    if (isAnyItemDragging) {\n                      return\n                    }\n                    div?.classList.remove('Mui-focused')\n                    parentMenu?.focus()\n                  })\n                  MouseTrap(draggable).bind('down', e => {\n                    if (isAnyItemDragging) {\n                      return\n                    }\n                    if (next) {\n                      next.focus()\n                      div?.classList.remove('Mui-focused')\n                    } else {\n                      parentMenu?.nextElementSibling?.focus()\n                      div?.classList.remove('Mui-focused')\n                    }\n                  })\n                  MouseTrap(draggable).bind('up', e => {\n                    if (isAnyItemDragging) {\n                      return\n                    }\n                    if (previous) {\n                      previous.focus()\n                      div?.classList.remove('Mui-focused')\n                    } else {\n                      parentMenu?.focus()\n                      div?.classList.remove('Mui-focused')\n                    }\n                  })\n                }\n\n                div?.classList.add('Mui-focused')\n                draggable.focus()\n              }\n            }}\n          >\n            {items &&\n              items.map(item => {\n                const label = (\n                  <Text fontSize='lg' color={'unison.purple'}>\n                    {item.label}\n                  </Text>\n                )\n                return (\n                  <TreeItem\n                    nodeId={item.nodeId}\n                    key={item.nodeId}\n                    label={\n                      <HStack>\n                        {item.nodeId === 'functions' ? (\n                          <Text fontWeight='bold' fontSize='xl' color={purple}>\n                            λ\n                          </Text>\n                        ) : item.nodeId === 'types' ? (\n                          <FaShapes color={purple} />\n                        ) : item.nodeId === 'effects' ? (\n                          <GiMineExplosion color={purple} />\n                        ) : null}\n                        {label}\n                      </HStack>\n                    }\n                  >\n                    {(() => {\n                      switch (item.nodeId) {\n                        case 'functions':\n                          return item.items.map(innerItem => {\n                            const id = `${item.nodeId}_${innerItem.name}`\n                            return (\n                              <FunctionTreeItem\n                                {...innerItem}\n                                key={id}\n                                nodeId={id}\n                                isAnyItemDragging={!!isAnyItemDragging}\n                              />\n                            )\n                          })\n                        case 'types':\n                          return item.items.map(innerItem => {\n                            const id = `${item.nodeId}_${innerItem.type}`\n                            return (\n                              <TypeTreeItem\n                                {...innerItem}\n                                key={id}\n                                nodeId={id}\n                                isAnyItemDragging={!!isAnyItemDragging}\n                              />\n                            )\n                          })\n                        case 'effects':\n                          return null //@TODO\n                        default:\n                          let _: never = item\n                      }\n                    })()}\n                  </TreeItem>\n                )\n              })}\n          </TreeView>\n        </Box>\n      )\n    },\n  ),\n)\n\nexport default Sidebar\n","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/App.tsx",["127"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/CardHStack.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/TypeBadge.tsx",["128","129"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/FlowCard.tsx",["130","131","132","133","134","135","136","137","138","139"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Card.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/state.ts",["140","141"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/Editor.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/PopoverExplanation.tsx",["142"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/EditableText.tsx",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/theme.ts",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/utils.js",[],["143","144"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/index.js",["145","146","147","148","149"],"import { Entity, Modifier, Editor, EditorState } from 'draft-js'\nimport * as React from 'react'\nimport { AutocompleteEditor } from './autocomplete'\nimport SuggestionList from './suggestions'\nimport styles from './styles'\nimport { normalizeIndex, filterArray } from './utils'\nimport * as triggers from './triggers'\nimport * as data from './data'\nimport addSuggestion from './addsuggestion'\n\nvar filteredArrayTemp\n\nexport default class AutocompleteInput extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      autocompleteState: null,\n    }\n\n    this.onChange = editorState =>\n      this.setState({\n        editorState,\n      })\n\n    this.onAutocompleteChange = autocompleteState =>\n      this.setState({\n        autocompleteState,\n      })\n\n    this.onInsert = insertState => {\n      if (!filteredArrayTemp) {\n        return null\n      }\n      const index = normalizeIndex(\n        insertState.selectedIndex,\n        filteredArrayTemp.length,\n      )\n      insertState.text = insertState.trigger + filteredArrayTemp[index]\n      return addSuggestion(insertState)\n    }\n  }\n\n  renderAutocomplete() {\n    //left, top, array, selectedIndex, type, text\n    const { autocompleteState, onSuggestionClick } = this.state\n    if (!autocompleteState) {\n      return null\n    }\n    filteredArrayTemp = this.getFilteredArray(\n      autocompleteState.type,\n      autocompleteState.text,\n    )\n    autocompleteState.array = filteredArrayTemp\n    // autocompleteState.onSuggestionClick = this.onSuggestionItemClick\n    return <SuggestionList suggestionsState={autocompleteState} />\n  }\n\n  getFilteredArray(type, text) {\n    const dataArray = type == triggers.PERSON ? data.persons : data.tags\n    const filteredArray = filterArray(\n      dataArray,\n      text.replace(triggers.regExByType(type), ''),\n    )\n    return filteredArray\n  }\n\n  render() {\n    return (\n      <div style={styles.root}>\n        {' '}\n        {this.renderAutocomplete()}{' '}\n        <div style={styles.editor}>\n          <AutocompleteEditor\n            editorState={this.state.editorState}\n            onChange={this.onChange}\n            onAutocompleteChange={this.onAutocompleteChange}\n            onInsert={this.onInsert}\n          />{' '}\n        </div>{' '}\n      </div>\n    )\n  }\n}\n\n// render( < AutocompleteInput / > ,\n//   document.getElementById('app')\n// );\n",["150","151"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/autocomplete.js",["152","153","154","155","156","157","158","159","160","161","162","163"],"import { render } from 'react-dom'\nimport React from 'react'\nimport { Editor, EditorState } from 'draft-js'\nimport styles from './styles'\nimport * as triggers from './triggers'\n\nexport class AutocompleteEditor extends Editor {\n  constructor(props) {\n    super(props)\n    this.autocompleteState = null\n\n    this.onChange = editorState => {\n      const { onChange, onAutocompleteChange } = this.props\n      onChange(editorState)\n      if (onAutocompleteChange) {\n        window.requestAnimationFrame(() => {\n          onAutocompleteChange(this.getAutocompleteState())\n        })\n      }\n    }\n\n    this.onArrow = (e, originalHandler, nudgeAmount) => {\n      const { onAutocompleteChange } = this.props\n      let autocompleteState = this.getAutocompleteState(false)\n      if (!autocompleteState) {\n        if (originalHandler) {\n          originalHandler(e)\n        }\n        return\n      }\n\n      e.preventDefault()\n      autocompleteState.selectedIndex += nudgeAmount\n      this.autocompleteState = autocompleteState\n      if (onAutocompleteChange) {\n        onAutocompleteChange(autocompleteState)\n      }\n    }\n\n    this.onUpArrow = e => {\n      this.onArrow(e, this.props.onUpArrow, -1)\n      const contentState = this.props.editorState.getCurrentContent()\n    }\n\n    this.onDownArrow = e => {\n      this.onArrow(e, this.props.onDownArrow, 1)\n    }\n\n    this.onEscape = e => {\n      const { onEscape, onAutocompleteChange } = this.props\n\n      if (!this.getAutocompleteState(false)) {\n        if (onEscape) {\n          onEscape(e)\n        }\n        return\n      }\n\n      e.preventDefault()\n      this.autocompleteState = null\n\n      if (onAutocompleteChange) {\n        onAutocompleteChange(null)\n      }\n    }\n\n    this.onTab = e => {\n      this.commitSelection(e)\n    }\n\n    this.handleReturn = e => {\n      return this.commitSelection(e)\n    }\n  }\n\n  commitSelection(e) {\n    const { onAutocompleteChange } = this.props\n    let autocompleteState = this.getAutocompleteState(false)\n    if (!autocompleteState) {\n      return false\n    }\n    e.preventDefault()\n    this.onMentionSelect()\n    this.autocompleteState = null\n\n    if (onAutocompleteChange) {\n      onAutocompleteChange(null)\n    }\n    return true\n  }\n\n  onMentionSelect() {\n    let autocompleteState = this.getAutocompleteState(false)\n    const { editorState } = this.props\n    const insertState = this.getInsertState(\n      autocompleteState.selectedIndex,\n      autocompleteState.trigger,\n    )\n    const { onInsert } = this.props\n    const newEditorState = onInsert(insertState)\n    const { onChange } = this.props\n    onChange(newEditorState)\n  }\n\n  getInsertState(selectedIndex, trigger) {\n    const { editorState } = this.props\n    const currentSelectionState = editorState.getSelection()\n    const end = currentSelectionState.getAnchorOffset()\n    const anchorKey = currentSelectionState.getAnchorKey()\n    const currentContent = editorState.getCurrentContent()\n    const currentBlock = currentContent.getBlockForKey(anchorKey)\n    const blockText = currentBlock.getText()\n    const start = blockText.substring(0, end).lastIndexOf(trigger)\n    return {\n      editorState,\n      start,\n      end,\n      trigger,\n      selectedIndex,\n    }\n  }\n\n  hasEntityAtSelection() {\n    const { editorState } = this.props\n\n    const selection = editorState.getSelection()\n    if (!selection.getHasFocus()) {\n      return false\n    }\n\n    const contentState = editorState.getCurrentContent()\n    const block = contentState.getBlockForKey(selection.getStartKey())\n    return !!block.getEntityAt(selection.getStartOffset() - 1)\n  }\n\n  getAutocompleteRange(trigger) {\n    const selection = window.getSelection()\n    if (selection.rangeCount === 0) {\n      return null\n    }\n\n    if (this.hasEntityAtSelection()) {\n      return null\n    }\n\n    const range = selection.getRangeAt(0)\n    let text = range.startContainer.textContent\n    text = text.substring(0, range.startOffset)\n    const index = text.lastIndexOf(trigger)\n    if (index === -1) {\n      return null\n    }\n    text = text.substring(index)\n    return {\n      text,\n      start: index,\n      end: range.startOffset,\n    }\n  }\n\n  getAutocompleteState(invalidate = true) {\n    if (!invalidate) {\n      return this.autocompleteState\n    }\n\n    const tagRange = this.getAutocompleteRange(triggers.TAG_TRIGGER)\n    const personRange = this.getAutocompleteRange(triggers.PERSON_TRIGGER)\n    if (!tagRange && !personRange) {\n      this.autocompleteState = null\n      return null\n    }\n    var type = null\n    var trigger = null\n    var range = null\n    if (!tagRange) {\n      range = personRange\n      type = triggers.PERSON\n      trigger = triggers.PERSON_TRIGGER\n    }\n\n    if (!personRange) {\n      range = tagRange\n      type = triggers.TAG\n      trigger = triggers.TAG_TRIGGER\n    }\n\n    if (!range) {\n      range = tagRange.start > personRange.start ? tagRange : personRange\n      type = tagRange.start > personRange.start ? triggers.TAG : triggers.PERSON\n      trigger =\n        tagRange.start > personRange.start\n          ? triggers.TAG_TRIGGER\n          : triggers.PERSON_TRIGGER\n    }\n\n    const tempRange = window.getSelection().getRangeAt(0).cloneRange()\n    tempRange.setStart(tempRange.startContainer, range.start)\n\n    const rangeRect = tempRange.getBoundingClientRect()\n    let [left, top] = [rangeRect.left, rangeRect.bottom]\n\n    this.autocompleteState = {\n      trigger,\n      type,\n      left,\n      top,\n      text: range.text,\n      selectedIndex: 0,\n    }\n    console.log(this.autocompleteState)\n    return this.autocompleteState\n  }\n\n  ///\n\n  getAutocompleteState(invalidate = true) {\n    if (!invalidate) {\n      return this.autocompleteState\n    }\n    var type = null\n    var trigger = null\n    //Get range for latest hash tag trigger symbol.\n    const tagRange = this.getAutocompleteRange(triggers.TAG_TRIGGER)\n    //Get range for latest mention tag trigger symbol.\n    const personRange = this.getAutocompleteRange(triggers.PERSON_TRIGGER)\n    //Find what trigger is latest.\n    if (!tagRange && !personRange) {\n      this.autocompleteState = null\n      return null\n    }\n    var range = null\n    if (!tagRange) {\n      range = personRange\n      type = triggers.PERSON\n      trigger = triggers.PERSON_TRIGGER\n    }\n    if (!personRange) {\n      range = tagRange\n      type = triggers.TAG\n      trigger = triggers.TAG_TRIGGER\n    }\n    if (!range) {\n      range = tagRange.start > personRange.start ? tagRange : personRange\n      type = tagRange.start > personRange.start ? triggers.TAG : triggers.PERSON\n      trigger =\n        tagRange.start > personRange.start\n          ? triggers.TAG_TRIGGER\n          : triggers.PERSON_TRIGGER\n    }\n    //Get left and top coordinates of range.\n    //This point will be used to draw suggestion list.\n    const tempRange = window.getSelection().getRangeAt(0).cloneRange()\n    tempRange.setStart(tempRange.startContainer, range.start)\n    const rangeRect = tempRange.getBoundingClientRect()\n    let [left, top] = [rangeRect.left, rangeRect.bottom]\n    //Create autocompleteState.\n    this.autocompleteState = {\n      trigger, //Trigger symbol. “@” or “#”\n      type, //Type of trigger. Can be TAG or PERSON.\n      left, //The left point of range.\n      top, //The top point of range.\n      text: range.text, //Current text in selected range.\n      selectedIndex: 0, //Selected index in list. 0 for new list.\n    }\n    return this.autocompleteState\n  }\n  //Get range of possible mention or hashtag.\n  getAutocompleteRange(trigger) {\n    const selection = window.getSelection()\n    if (selection.rangeCount === 0) {\n      return null\n    }\n    if (this.hasEntityAtSelection()) {\n      return null\n    }\n    const range = selection.getRangeAt(0)\n    let text = range.startContainer.textContent\n    text = text.substring(0, range.startOffset)\n    const index = text.lastIndexOf(trigger)\n    if (index === -1) {\n      return null\n    }\n    text = text.substring(index)\n    return {\n      text,\n      start: index,\n      end: range.startOffset,\n    }\n  }\n\n  hasEntityAtSelection() {\n    const { editorState } = this.props\n    const selection = editorState.getSelection()\n    //If there is no focus, return.\n    if (!selection.getHasFocus()) {\n      return false\n    }\n    const contentState = editorState.getCurrentContent()\n    const block = contentState.getBlockForKey(selection.getStartKey())\n    return !!block.getEntityAt(selection.getStartOffset() - 1)\n  }\n\n  ///\n  render() {\n    const {\n      onChange,\n      editorState,\n      onEscape,\n      onUpArrow,\n      onDownArrow,\n      onAutocompleteChange,\n    } = this.props\n\n    return (\n      <Editor\n        customStyleMap={styles}\n        editorState={editorState}\n        handleReturn={this.handleReturn}\n        onChange={this.onChange}\n        onEscape={this.onEscape}\n        onUpArrow={this.onUpArrow}\n        onDownArrow={this.onDownArrow}\n        onTab={this.onTab}\n      />\n    )\n  }\n}\n",["164","165"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/triggers.js",["166","167"],"export const TAG = 1;\nexport const PERSON = 2;\nexport const RELATIONS = 3;\nexport const TAG_TRIGGER = '#';\nexport const PERSON_TRIGGER = '@';\nexport const RELATIONS_TRIGGER = '<';\n\n\nexport const TAG_REG_EX = /^#/;\nexport const PERSON_REG_EX = /^@/;\n\n\nexport const triggerByType = (type) => {\n  return type == TAG ? TAG_TRIGGER : PERSON_TRIGGER;\n};\n\nexport const regExByType = (type) => {\n  return type == TAG ? TAG_REG_EX : PERSON_REG_EX;\n};",["168","169"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/data.js",[],["170","171"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/styles.js",[],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/addsuggestion.js",["172"],"import { Entity, Modifier, Editor, EditorState } from 'draft-js';\n\nconst addSuggestion = ({editorState, start, end, trigger, text}) => {\n  const entityKey = Entity.create('MENTION', 'IMMUTABLE', \"http://vk.com\");\n  const currentSelectionState = editorState.getSelection();\n  const mentionTextSelection = currentSelectionState.merge({\n    anchorOffset: start,\n    focusOffset: end\n  });\n\n  let insertingContent = Modifier.replaceText(\n    editorState.getCurrentContent(),\n    mentionTextSelection,\n    text, ['link', 'BOLD'],\n    entityKey\n  );\n\n  const blockKey = mentionTextSelection.getAnchorKey();\n  const blockSize = editorState.getCurrentContent().getBlockForKey(blockKey).getLength();\n  if (blockSize === end) {\n    insertingContent = Modifier.insertText(\n      insertingContent,\n      insertingContent.getSelectionAfter(),\n      ' '\n    );\n  }\n\n  const newEditorState = EditorState.push(\n    editorState,\n    insertingContent,\n    'insert-mention'\n  );\n\n  return EditorState.forceSelection(newEditorState, insertingContent.getSelectionAfter());\n};\n\n\nexport default addSuggestion;","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/autocomplete-react-draft/src/suggestions.js",["173"],"import styles from './styles'\nimport { render } from 'react-dom'\nimport React from 'react'\nimport { normalizeIndex } from './utils'\n\nconst SuggestionList = props => {\n  const { suggestionsState } = props\n  const { left, top, array, selectedIndex } = suggestionsState\n\n  const style = Object.assign({}, styles.suggestions, {\n    position: 'absolute',\n    left,\n    top,\n  })\n  if (!array) {\n    return null\n  }\n  const normalizedIndex = normalizeIndex(selectedIndex, array.length)\n  return (\n    <ul style={style}>\n      {' '}\n      {array.map((person, index) => {\n        const style =\n          index === normalizedIndex ? styles.selectedPerson : styles.person\n        return (\n          <li key={person} style={style}>\n            {' '}\n            {person}{' '}\n          </li>\n        )\n      }, this)}{' '}\n    </ul>\n  )\n}\n\nexport default SuggestionList\n","/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/DocsCard/components.tsx",["174","175","176"],"/Users/jesusgarciamartinez/Desktop/new-documents/projects/unison-job-application/my-app/src/components/DocsCard/DocsCard.tsx",["177","178","179","180","181","182","183","184","185","186"],{"ruleId":"187","severity":1,"message":"188","line":3,"column":27,"nodeType":"189","messageId":"190","endLine":3,"endColumn":38},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"191","replacedBy":"195"},{"ruleId":"193","replacedBy":"196"},{"ruleId":"191","replacedBy":"197"},{"ruleId":"193","replacedBy":"198"},{"ruleId":"187","severity":1,"message":"199","line":17,"column":3,"nodeType":"189","messageId":"190","endLine":17,"endColumn":20},{"ruleId":"187","severity":1,"message":"200","line":18,"column":3,"nodeType":"189","messageId":"190","endLine":18,"endColumn":18},{"ruleId":"187","severity":1,"message":"201","line":422,"column":31,"nodeType":"189","messageId":"190","endLine":422,"endColumn":39},{"ruleId":"187","severity":1,"message":"202","line":8,"column":3,"nodeType":"189","messageId":"190","endLine":8,"endColumn":11},{"ruleId":"187","severity":1,"message":"203","line":2,"column":27,"nodeType":"189","messageId":"190","endLine":2,"endColumn":36},{"ruleId":"187","severity":1,"message":"202","line":2,"column":38,"nodeType":"189","messageId":"190","endLine":2,"endColumn":46},{"ruleId":"187","severity":1,"message":"204","line":7,"column":3,"nodeType":"189","messageId":"190","endLine":7,"endColumn":9},{"ruleId":"187","severity":1,"message":"205","line":18,"column":3,"nodeType":"189","messageId":"190","endLine":18,"endColumn":21},{"ruleId":"187","severity":1,"message":"206","line":19,"column":3,"nodeType":"189","messageId":"190","endLine":19,"endColumn":25},{"ruleId":"187","severity":1,"message":"207","line":20,"column":3,"nodeType":"189","messageId":"190","endLine":20,"endColumn":25},{"ruleId":"187","severity":1,"message":"208","line":22,"column":3,"nodeType":"189","messageId":"190","endLine":22,"endColumn":7},{"ruleId":"187","severity":1,"message":"209","line":32,"column":3,"nodeType":"189","messageId":"190","endLine":32,"endColumn":17},{"ruleId":"187","severity":1,"message":"210","line":196,"column":34,"nodeType":"189","messageId":"190","endLine":196,"endColumn":36},{"ruleId":"211","severity":1,"message":"212","line":290,"column":25,"nodeType":"213","endLine":294,"endColumn":27},{"ruleId":"211","severity":1,"message":"212","line":305,"column":17,"nodeType":"213","endLine":310,"endColumn":19},{"ruleId":"211","severity":1,"message":"212","line":313,"column":15,"nodeType":"213","endLine":318,"endColumn":17},{"ruleId":"187","severity":1,"message":"214","line":1,"column":8,"nodeType":"189","messageId":"190","endLine":1,"endColumn":15},{"ruleId":"187","severity":1,"message":"215","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":16},{"ruleId":"187","severity":1,"message":"216","line":1,"column":24,"nodeType":"189","messageId":"190","endLine":1,"endColumn":43},{"ruleId":"191","replacedBy":"217"},{"ruleId":"193","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":16},{"ruleId":"219","severity":1,"message":"221","line":1,"column":18,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"219","severity":1,"message":"222","line":1,"column":28,"nodeType":"189","messageId":"190","endLine":1,"endColumn":34},{"ruleId":"219","severity":1,"message":"223","line":46,"column":32,"nodeType":"189","messageId":"190","endLine":46,"endColumn":49},{"ruleId":"224","severity":1,"message":"225","line":60,"column":28,"nodeType":"226","messageId":"227","endLine":60,"endColumn":30},{"ruleId":"191","replacedBy":"228"},{"ruleId":"193","replacedBy":"229"},{"ruleId":"219","severity":1,"message":"230","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":16},{"ruleId":"219","severity":1,"message":"231","line":3,"column":18,"nodeType":"189","messageId":"190","endLine":3,"endColumn":29},{"ruleId":"219","severity":1,"message":"232","line":42,"column":13,"nodeType":"189","messageId":"190","endLine":42,"endColumn":25},{"ruleId":"219","severity":1,"message":"233","line":94,"column":13,"nodeType":"189","messageId":"190","endLine":94,"endColumn":24},{"ruleId":"234","severity":1,"message":"235","line":216,"column":3,"nodeType":"236","messageId":"227","endLine":266,"endColumn":4},{"ruleId":"234","severity":1,"message":"237","line":268,"column":3,"nodeType":"236","messageId":"227","endLine":289,"endColumn":4},{"ruleId":"234","severity":1,"message":"238","line":291,"column":3,"nodeType":"236","messageId":"227","endLine":301,"endColumn":4},{"ruleId":"219","severity":1,"message":"239","line":306,"column":7,"nodeType":"189","messageId":"190","endLine":306,"endColumn":15},{"ruleId":"219","severity":1,"message":"240","line":308,"column":7,"nodeType":"189","messageId":"190","endLine":308,"endColumn":15},{"ruleId":"219","severity":1,"message":"241","line":309,"column":7,"nodeType":"189","messageId":"190","endLine":309,"endColumn":16},{"ruleId":"219","severity":1,"message":"242","line":310,"column":7,"nodeType":"189","messageId":"190","endLine":310,"endColumn":18},{"ruleId":"219","severity":1,"message":"243","line":311,"column":7,"nodeType":"189","messageId":"190","endLine":311,"endColumn":27},{"ruleId":"191","replacedBy":"244"},{"ruleId":"193","replacedBy":"245"},{"ruleId":"224","severity":1,"message":"225","line":14,"column":15,"nodeType":"226","messageId":"227","endLine":14,"endColumn":17},{"ruleId":"224","severity":1,"message":"225","line":18,"column":15,"nodeType":"226","messageId":"227","endLine":18,"endColumn":17},{"ruleId":"191","replacedBy":"246"},{"ruleId":"193","replacedBy":"247"},{"ruleId":"191","replacedBy":"248"},{"ruleId":"193","replacedBy":"249"},{"ruleId":"219","severity":1,"message":"222","line":1,"column":28,"nodeType":"189","messageId":"190","endLine":1,"endColumn":34},{"ruleId":"219","severity":1,"message":"230","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":16},{"ruleId":"187","severity":1,"message":"250","line":2,"column":29,"nodeType":"189","messageId":"190","endLine":2,"endColumn":35},{"ruleId":"187","severity":1,"message":"251","line":8,"column":3,"nodeType":"189","messageId":"190","endLine":8,"endColumn":12},{"ruleId":"187","severity":1,"message":"252","line":14,"column":10,"nodeType":"189","messageId":"190","endLine":14,"endColumn":22},{"ruleId":"187","severity":1,"message":"253","line":16,"column":3,"nodeType":"189","messageId":"190","endLine":16,"endColumn":7},{"ruleId":"187","severity":1,"message":"254","line":19,"column":21,"nodeType":"189","messageId":"190","endLine":19,"endColumn":36},{"ruleId":"187","severity":1,"message":"220","line":33,"column":3,"nodeType":"189","messageId":"190","endLine":33,"endColumn":9},{"ruleId":"187","severity":1,"message":"255","line":49,"column":9,"nodeType":"189","messageId":"190","endLine":49,"endColumn":27},{"ruleId":"256","severity":1,"message":"257","line":81,"column":12,"nodeType":"258","messageId":"227","endLine":81,"endColumn":16},{"ruleId":"187","severity":1,"message":"259","line":332,"column":5,"nodeType":"189","messageId":"190","endLine":332,"endColumn":31},{"ruleId":"187","severity":1,"message":"260","line":334,"column":9,"nodeType":"189","messageId":"190","endLine":334,"endColumn":26},{"ruleId":"187","severity":1,"message":"261","line":540,"column":9,"nodeType":"189","messageId":"190","endLine":540,"endColumn":21},{"ruleId":"187","severity":1,"message":"262","line":545,"column":9,"nodeType":"189","messageId":"190","endLine":545,"endColumn":20},{"ruleId":"263","severity":1,"message":"264","line":587,"column":6,"nodeType":"265","endLine":587,"endColumn":28,"suggestions":"266"},"@typescript-eslint/no-unused-vars","'extendTheme' is defined but never used.","Identifier","unusedVar","no-native-reassign",["267"],"no-negated-in-lhs",["268"],["267"],["268"],["267"],["268"],"'InputRightElement' is defined but never used.","'InputRightAddon' is defined but never used.","'_' is assigned a value but never used.","'useTheme' is defined but never used.","'TextProps' is defined but never used.","'Center' is defined but never used.","'NumberInputStepper' is defined but never used.","'NumberIncrementStepper' is defined but never used.","'NumberDecrementStepper' is defined but never used.","'Text' is defined but never used.","'PlusSquareIcon' is defined but never used.","'id' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component C_TypeAndValue must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'produce' is defined but never used.","'DocsCard' is defined but never used.","'QuestionOutlineIcon' is defined but never used.",["267"],["268"],"no-unused-vars","'Entity' is defined but never used.","'Modifier' is defined but never used.","'Editor' is defined but never used.","'onSuggestionClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["267"],["268"],"'render' is defined but never used.","'EditorState' is defined but never used.","'contentState' is assigned a value but never used.","'editorState' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'getAutocompleteState'.","MethodDefinition","Duplicate name 'getAutocompleteRange'.","Duplicate name 'hasEntityAtSelection'.","'onChange' is assigned a value but never used.","'onEscape' is assigned a value but never used.","'onUpArrow' is assigned a value but never used.","'onDownArrow' is assigned a value but never used.","'onAutocompleteChange' is assigned a value but never used.",["267"],["268"],["267"],["268"],["267"],["268"],"'Switch' is defined but never used.","'CloseIcon' is defined but never used.","'FunctionItem' is defined but never used.","'Fade' is defined but never used.","'ArrowUpDownIcon' is defined but never used.","'hasCommandModifier' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","'setAutocompleteDescription' is assigned a value but never used.","'filteredFunctions' is assigned a value but never used.","'onChangeCode' is assigned a value but never used.","'editorValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'descriptionDecorator' and 'dispatch'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["269"],"no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},"Update the dependencies array to be: [descriptionDecorator, dispatch, index]",{"range":"272","text":"273"},[16843,16865],"[descriptionDecorator, dispatch, index]"]